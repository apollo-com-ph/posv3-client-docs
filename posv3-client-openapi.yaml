openapi: "3.0.0"

info:
  title: POSv3 Client API
  version: "1.0"
  description: Connectivity between POSv3 PWA to local devices such as printers, cash drawers, card terminals and data storage. API also handles connectivity to the central servers to process various cloud functions like authentication, uploading of transactions and data synchronization.  

tags:
  - name: UserController
    description: API for user login and logout
  - name: DeviceController
    description: API for accessing devices like printer and cash drawer
  - name: DatastoreController
    description: API for accessing local data storage
  
servers:
  - url: http://localhost:81107/pos3/v1

security:
  - bearerAuth: []

paths:
  /login:
    post:
      tags: 
        - UserController
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /logout:
    post:
      tags:
        - UserController
      summary: User logout
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /device/status/{device_id}:
    get:
      tags:
        - DeviceController
      summary: Get list of devices connected to POS. Status for all devices will be listed if no device_id is provided.
      parameters:
        - $ref: '#/components/parameters/device_id'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceStatusResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /device/test/{device_id}:
    post:
      tags:
        - DeviceController
      summary: Do a test action for the device to validate connectivity
      parameters:
        - $ref: '#/components/parameters/device_id'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /device/reconnect/{device_id}:
    post:
      tags:
        - DeviceController
      summary: Reconnect to the device
      parameters:
        - $ref: '#/components/parameters/device_id'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /device/configure/{device_id}:
    put:
      tags:
        - DeviceController
      summary: Set configuration for the device
      parameters:
        - $ref: '#/components/parameters/device_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceConfigurationRequest'

      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /device/print/{device_id}:
    post:
      tags:
        - DeviceController
      summary: Send text data to the printer device
      parameters:
        - $ref: '#/components/parameters/device_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DevicePrintRequest'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /device/print_image/{device_id}/{image_filename}:
    post:
      tags:
        - DeviceController
      summary: Print image to the printer device
      parameters:
        - $ref: '#/components/parameters/device_id'
        - $ref: '#/components/parameters/image_filename'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /device/cut_paper/{device_id}:
    post:
      tags:
        - DeviceController
      summary: Send cut command to the printer device
      parameters:
        - $ref: '#/components/parameters/device_id'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /device/open_drawer/{device_id}:
    post:
      tags:
        - DeviceController
      summary: Open cash drawer device
      parameters:
        - $ref: '#/components/parameters/device_id'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /datastore/list/{document}:
    post:
      tags:
        - DatastoreController
      summary: List all data from document with optional criteria
      parameters:
        - name: document
          description: Name of the document to retrieve from
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRequest'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResultListResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /datastore/{document}/{id}:
    get:
      tags:
        - DatastoreController
      summary: Get document with ID
      parameters:
        - name: document
          description: Name of the document to retrieve from
          in: path
          required: true
          schema:
            type: string
        - name: id
          description: Identifier of the document to retrieve
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResultResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'
    post:
      tags:
        - DatastoreController
      summary: Update document with ID
      parameters:
        - name: document
          description: Name of the document to update
          in: path
          required: true
          schema:
            type: string
        - name: id
          description: Identifier of the document to update
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResultResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /datastore/{document}:
    post:
      tags:
        - DatastoreController
      summary: Create a new document
      parameters:
        - name: document
          description: Name of the document to create
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResultResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    device_id:
      name: device_id
      in: path
      description: Identifier of the device
      required: true
      schema:
        type: string

    image_filename:
      name: image_filename
      in: path
      description: Filename of the image to print
      required: true
      schema:
        type: string

  schemas:
    GenericSuccessResponse:
      description: Generic success response
      type: object
      properties:
        message:
          type: string
          description: Success message
          default: Success
        code:
          type: integer
          description: Success code
          default: 200
      required:
        - message
        - code

    UnauthorizedResponse:
      description: Unauthorized response
      properties:
        message:
          type: string
          description: Unauthorized message
          default: Unauthorized
        code:
          type: integer
          description: Unauthorized code
          enum:
            - 4010  # General unauthorized
            - 4011  # Invalid token
            - 4012  # Token expired
            - 4013  # Insufficient permissions
            - 4014  # User not found
            - 4015  # Wrong password
            - 4016  # Account locked
      required:
        - message
        - code
    
    InternalErrorResponse:
      description: Internal error response
      properties:
        message:
          type: string
          description: Error message
          default: Internal error
        code:
          type: integer
          description: Error code
          default: 50000  # General error
      required:
        - message
        - code

    BadRequestResponse:
      description: Bad request error response
      properties:
        fields:
          type: array
          description: List of fields with errors
          items:
            type: object
            properties:
              field:
                type: string
                description: Field with error
                example: field1
              message:
                type: string
                description: Error message
                example: Field is required
        message:
          type: string
          description: Error message
          default: Bad request
        code:
          type: integer
          description: Error code
          default: 40000  # General error
      required:
        - message
        - code
          
    UserLoginRequest:
      description: User login request
      properties:
        username:
          type: string
          description: Username for the user logging in
          example: user1
        password:
          type: string
          description: Password for the user hashed using SHA256
          example: 5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8
      required:
        - username
        - password

    UserLoginResponse:
      description: User login response
      properties:
        token:
          type: string
          description: JWT token for the user
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1MTYyMzkwMjJ9.3Jv5
        permissions:
          type: array
          description: List of permissions for the user
          items:
            type: string
            example: ["DEVICE_MAINTENANCE", "DEVICE_USER"]
        message:
          type: string
          description: Success message
          default: Login successful
        code:
          type: integer
          description: Success code
          default: 200
      required:
        - token
        - permissions
        - message
        - code

    DeviceStatusResponse:
      description: Device status response
      properties:
        devices:
          type: array
          items:
            type: object
            properties:
              device_id:
                type: string
                description: Identifier of the device
                example: posiflex_printer_1
              name:
                type: string
                description: Name for the device
                example: Posiflex Printer 1
              type:
                type: string
                description: Type of device
                enum:
                  - PRINTER
                  - CASH_DRAWER
                  - LINE_DISPLAY
              status:
                type: string
                description: Status of the device
                enum:
                  - CONNECTED
                  - DISCONNECTED
                  - ERROR
              configurations:
                type: array
                items:
                  type: object
                  properties:
                    key:
                      type: string
                      description: Configuration key
                      example: printer_paper_width
                    value:
                      type: string
                      description: Configuration value
                      example: 80mm
        message:
          type: string
          description: Success message
          default: Device status retrieved
        code:
          type: integer
          description: Success code
          default: 200

    DeviceConfigurationRequest:
      description: Device configuration request
      type: object
      properties:
        configurations:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
                description: Configuration key
                example: printer_paper_width
              value:
                type: string
                description: Configuration value
                example: 80mm
      required:
        - configurations

    DevicePrintRequest:
      description: Device print request
      type: object
      properties:
        text:
          type: string
          description: Text data to print. Use markdown for formatting.
          example: Test Print\n\nThis is a test print
        cut-after:
          type: boolean
          description: Cut the paper after printing
          default: false
        logo-before:
          type: boolean
          description: Print header logo before the text body
          default: false
        logo-after:
          type: boolean
          description: Print header logo after paper had been cut
          default: false
      required:
        - text

    QueryRequest:
      description: Query request
      type: object
      properties:
        query:
          type: object
          $ref: '#/components/schemas/BooleanConditionQuery'
          example: {and: [{eq: {field1: value1}}, {gt: {field2: value2}}]}
        sort:
          type: object
          description: Sort object
          example: {field1: ASC, field2: DESC}
        limit:
          type: integer
          description: Limit of results
          example: 10
        offset:
          type: integer
          description: Offset of results
          example: 0
      required:
        - query

    MatchConditionQuery:
      description: Match condition query
      type: object
      properties:
        eq:
          type: object
          description: Match equal condition
          example: {field: value}
        ne:
          type: object
          description: Match not equal condition
          example: {field: value}
        gt:
          type: object
          description: Match greater than condition
          example: {field: value}
        gte:
          type: object
          description: Match greater than or equal condition
          example: {field: value}
        lt:
          type: object
          description: Match less than condition
          example: {field: value}
        lte:
          type: object
          description: Match less than or equal condition
          example: {field: value}
        in:
          type: object
          description: Match in condition
          example: {field: [value1, value2]}
        nin:
          type: object
          description: Match not in condition
          example: {field: [value1, value2]}
        like:
          type: object
          description: Match like condition
          example: {field: value}
        nlike:
          type: object
          description: Match not like condition
          example: {field: value}
        between:
          type: object
          description: Match between condition
          example: {field: [value1, value2]}

    BooleanConditionQuery:
      description: Boolean condition query
      type: object
      properties:
        and:
          type: array
          description: List of AND conditions
          items:
            type: object
            oneOf:
              - $ref: '#/components/schemas/MatchConditionQuery'
              - $ref: '#/components/schemas/BooleanConditionQuery'
        or:
          type: array
          description: List of OR conditions
          items:
            type: object
            oneOf:
              - $ref: '#/components/schemas/MatchConditionQuery'
              - $ref: '#/components/schemas/BooleanConditionQuery'
        not:
          type: object
          description: NOT condition
          items:
            type: object
            oneOf:
              - $ref: '#/components/schemas/MatchConditionQuery'
              - $ref: '#/components/schemas/BooleanConditionQuery'

    DocumentResultListResponse:
      description: Result list response
      type: object
      properties:
        results:
          type: array
          description: List of results
          items:
            type: object
            description: Result item
          default: []
        result_size:
          type: integer
          description: Number of results
          default: 0
        message:
          type: string
          description: Success message
          default: Success
        code:
          type: integer
          description: Success code
          default: 200
      required:
        - results
        - result_size
        - message
        - code

    DocumentResultResponse:
      description: Document result response
      type: object
      properties:
        id: 
          type: string
          description: Identifier of the document
          example: 123456
        result:
          type: object
          description: Document data
          default: null
        message:
          type: string
          description: Success message
          default: Success
        code:
          type: integer
          description: Success code
          default: 200
      required:
        - message
        - code

    ProductDocument:
      description: Product document
      type: object
      properties:
        id:
          type: string
          description: Identifier of the product
          example: 123456
        long_name:
          type: string
          description: Unabbreviated name of the product
          example: Product 1
        short_name:
          type: string
          description: Abbreviated name of the product
          maxLength: 50
          example: Prod1
        identifiers:
          type: array
          description: Identifiers assigned to the product
          items:
            type: object
            $ref: '#/components/schemas/ProductIdentifierDocument'
          example: [{id: 123456, type: SKU}]
        catalog_category:
          type: object
          description: Category of the product
          $ref: '#/components/schemas/CategoryDocument'
          example: {id: 123e4567-e89b-12d3-a456-426614174000, name: Food, type: CATALOG_CATEGORY}
        catalog_subcategory:
          type: string
          description: Subcategory of the product
          $ref: '#/components/schemas/CategoryDocument'
          example: {id: 123e4567-e89b-12d3-a456-426614174001, name: Snacks, type: CATALOG_SUBCATEGORY}
        catalog_super_category:
          type: string
          description: Super category of the product
          $ref: '#/components/schemas/CategoryDocument'
          example: {id: 123e4567-e89b-12d3-a456-426614174002, name: Grocery, type: CATALOG_SUPER_CATEGORY}
        categories:
          type: array
          description: List of categories assigned to the product
          items:
            type: object
            $ref: '#/components/schemas/CategoryDocument'
          example: [{id: 123e4567-e89b-12d3-a456-426614174000, name: Food, type: CATALOG_CATEGORY}]
        image_url:
          type: string
          description: Filename of the product image
          example: images/product/product1.jpg
        prices:
          type: array
          description: Prices of the product
          items:
            type: object
            $ref: '#/components/schemas/ProductPriceDocument'
          example: [{price: 10.00, currency: PHP, type: RETAIL, from_date: 2021-01-01T00:00:00Z, to_date: 2021-12-31T23:59:59Z}]
        costs:
          type: array
          description: Costs of the product
          items:
            type: object
            $ref: '#/components/schemas/ProductPriceDocument'
          example: [{price: 5.00, currency: PHP, type: COST, from_date: 2021-01-01T00:00:00Z, to_date: 2021-12-31T23:59:59Z}]
        tax_rate:
          type: number
          description: Tax rate of the product
          example: 0.12
        is_consigned:
          type: boolean
          description: Is the product consigned
          default: false
        discontinued_date:
          type: string
          description: Date when the product was discontinued
          format: date-time
          example: 2021-01-01T00:00:00Z
        date_created:
          type: string
          description: Date created of the product document
          format: date-time
          example: 2021-01-01T00:00:00Z
        last_updated:
          type: string
          description: Last updated date of the product document
          format: date-time
          example: 2021-01-01T00:00:00Z
#       brand:
#       attributes:
#       cross_sell_products:
#       bill_of_materials:
      required:
        - id
        - long_name
        - short_name
        - identifiers
        - catalog_category
        - categories
        - prices
        - tax_rate
        - is_consigned
        - date_created
        - last_updated

    ProductIdentifierDocument:
      description: Product identifier document
      type: object
      properties:
        id:
          type: string
          description: Identifier of the product identifier
          example: 123456
        type:
          type: string
          description: Type of the product identifier
          example: SKU
      required:
        - id
        - type

    CategoryDocument:
      description: Category document
      type: object
      properties:
        id:
          type: string
          description: Identifier of the category
          example: 123e4567-e89b-12d3-a456-426614174000
        name:
          type: string
          description: Name of the category
          example: Food
        type:
          type: string
          description: Type of the category
          example: CATALOG_CATEGORY
      required:
        - id
        - name
        - type

    ProductPriceDocument:
      description: Product price document
      type: object
      properties:
        price:
          type: number
          description: Price of the product
          example: 10.00
        currency:
          type: string
          description: Currency of the price
          example: PHP
        type:
          type: string
          description: Type of the price
          example: RETAIL
        from_date:
          type: string
          description: Start date of the price
          format: date-time
          example: 2021-01-01T00:00:00Z
        to_date:
          type: string
          description: End date of the price
          format: date-time
          example: 2021-12-31T23:59:59Z
      required:
        - price
        - currency
        - from_date
        - to_date

    BarcodeDocument:
      description: Barcode document
      type: object
      properties:
        barcode:
          type: string
          description: Barcode value
          example: 1234567890123
        product:
          type: object
          description: Product associated with the barcode
          properties:
            id:
              type: string
              description: Identifier of the product
              example: 123456
            long_name:
              type: string
              description: Unabbreviated name of the product
              example: Product 1
            short_name:
              type: string
              description: Abbreviated name of the product
              maxLength: 50
              example: Prod1
        from_date:
          type: string
          description: Start date of the barcode
          format: date-time
          example: 2021-01-01T00:00:00Z
        to_date:
          type: string
          description: End date of the barcode
          format: date-time
          example: 2021-12-31T23:59:59Z
        date_created:
          type: string
          description: Date created of the barcode document
          format: date-time
          example: 2021-01-01T00:00:00Z
        last_updated:
          type: string
          description: Last updated date of the barcode document
          format: date-time
          example: 2021-01-01T00:00:00Z
      required:
        - id
        - barcode
        - type
        - date_created
        - last_updated

    PosMenuDocument:
      description: POS menu document
      type: object
      properties:
        items:
          type: array
          description: List of menu items
          items:
            type: object
            $ref: '#/components/schemas/MenuItemDocument'
            example: [{id: 123456, label: Menu Item 1, product: {id: 123456, long_name: Product 1, short_name: Prod1}, image_url: images/product/product1.jpg, foreground_color: \#000000, background_color: \#FFFFFF}]
        date_created:
          type: string
          description: Date created of the menu document
          format: date-time
          example: 2021-01-01T00:00:00Z
        last_updated:
          type: string
          description: Last updated date of the menu document
          format: date-time
          example: 2021-01-01T00:00:00Z

    MenuItemDocument:
      description: Menu item document
      type: object
      properties:
        id:
          type: string
          description: Identifier of the menu
          example: 123e4567-e89b-12d3-a456-426614174000
        label:
          type: string
          description: Display label of the menu item
          example: Menu 1
        product:
          type: object
          description: Product associated with the menu item
          properties:
            id:
              type: string
              description: Identifier of the product
              example: 123456
            long_name:
              type: string
              description: Unabbreviated name of the product
              example: Product 1
            short_name:
              type: string
              description: Abbreviated name of the product
              maxLength: 50
              example: Prod1
        items:
          type: array
          description: List of sub menu items
          items:
            type: object
            $ref: '#/components/schemas/MenuItemDocument'
            example: [{id: 123456, label: Menu Item 1, product: {id: 123456, long_name: Product 1, short_name: Prod1}, image_url: images/product/product1.jpg, foreground_color: \#000000, background_color: \#FFFFFF}]
        image_url:
          type: string
          description: Filename of the menu item image
          example: images/product/product1.jpg
        foreground_color:
          type: string
          description: Foreground color of the menu item
          example: #000000
        background_color:
          type: string
          description: Background color of the menu item
          example: #FFFFFF
        from_date:
          type: string
          description: Start date of the barcode
          format: date-time
          example: 2021-01-01T00:00:00Z
        to_date:
          type: string
          description: End date of the barcode
          format: date-time
          example: 2021-12-31T23:59:59Z
        date_created:
          type: string
          description: Date created of the menu document
          format: date-time
          example: 2021-01-01T00:00:00Z
        last_updated:
          type: string
          description: Last updated date of the menu document
          format: date-time
          example: 2021-01-01T00:00:00Z
      required:
        - label
        - from_date
        - date_created
        - last_updated

    BusinessDateDocument:
      description: Details for business date data
      type: object
      properties:
        id:
          type: string
          description: Identifier of the business date
          example: 123e4567-e89b-12d3-a456-426614174000
        business_date:
          type: string
          description: Date assigned for this business date object
          format: date
          example: 2021-01-01
        start_date:
          type: string
          description: Start date of the business date
          format: date-time
          example: 2021-01-01T00:00:00Z
        end_date:
          type: string
          description: End date of the business date
          format: date-time
          example: 2021-01-01T23:59:59Z
        x_readings:
          type: object
          description: X Readings for the business date
          $ref: '#/components/schemas/PosReadingDocument'
          example: {or_beginning_series: 000000, or_ending_series: 000001, or_beginning_sales: 1000.00, or_ending_sales: 2000.00, or_series_reset: 0, or_transaction_count: 100, or_gross_sales: 10000.00, or_net_sales: 9000.00, or_total_vatable_sales: 8000.00, or_total_vat_exempt_sales: 1000.00, or_total_zero_rated_sales: 0.00, or_total_vat_amount: 1000.00, or_total_discount: 1000.00, or_total_item_refund: 1000.00, or_total_receipt_refund: 1000.00, or_total_refund: 1000.00, or_credit_memo_beginning_series: 000000, or_credit_memo_ending_series: 000001, or_credit_memo_series_reset: 0, ar_beginning_series: 000000, ar_ending_series: 000001, ar_beginning_sales: 1000.00, ar_ending_sales: 2000.00, ar_series_reset: 0, ar_transaction_count: 100, ar_gross_sales: 10000.00, ar_net_sales: 9000.00, ar_total_vatable_sales: 8000.00, ar_total_vat_exempt_sales: 1000.00, ar_total_zero_rated_sales: 0.00, ar_total_vat_amount: 1000.00, ar_total_discount: 1000.00, ar_total_item_refund: 1000.00, ar_total_receipt_refund: 1000.00, ar_total_refund: 1000.00}
        z_readings:
          type: object
          description: Z Readings for the business date
          $ref: '#/components/schemas/PosReadingDocument'
          example: {or_beginning_series: 000000, or_ending_series: 000001, or_beginning_sales: 1000.00, or_ending_sales: 2000.00, or_series_reset: 0, or_transaction_count: 100, or_gross_sales: 10000.00, or_net_sales: 9000.00, or_total_vatable_sales: 8000.00, or_total_vat_exempt_sales: 1000.00, or_total_zero_rated_sales: 0.00, or_total_vat_amount: 1000.00, or_total_discount: 1000.00, or_total_item_refund: 1000.00, or_total_receipt_refund: 1000.00, or_total_refund: 1000.00, or_credit_memo_beginning_series: 000000, or_credit_memo_ending_series: 000001, or_credit_memo_series_reset: 0, ar_beginning_series: 000000, ar_ending_series: 000001, ar_beginning_sales: 1000.00, ar_ending_sales: 2000.00, ar_series_reset: 0, ar_transaction_count: 100, ar_gross_sales: 10000.00, ar_net_sales: 9000.00, ar_total_vatable_sales: 8000.00, ar_total_vat_exempt_sales: 1000.00, ar_total_zero_rated_sales: 0.00, ar_total_vat_amount: 1000.00, ar_total_discount: 1000.00, ar_total_item_refund: 1000.00, ar_total_receipt_refund: 1000.00, ar_total_refund: 1000.00}
        date_created:
          type: string
          description: Date created of the business date document
          format: date-time
          example: 2021-01-01T00:00:00Z
        last_updated:
          type: string
          description: Last updated date of the business date document
          format: date-time
          example: 2021-01-01T00:00:00Z
      required:
        - business_date
        - start_date
        - x_readings
        - z_readings
        - date_created
        - last_updated

    ShiftDocument:
      description: Details for Shift data
      type: object
      properties:
        id:
          type: string
          description: Identifier of the shift
          example: 123e4567-e89b-12d3-a456-426614174000
        shift_number:
          type: string
          description: Description for the shift
          example: 1
        start_date:
          type: string
          description: Start date of the business date
          format: date-time
          example: 2021-01-01T00:00:00Z
        end_date:
          type: string
          description: End date of the business date
          format: date-time
          example: 2021-01-01T23:59:59Z
        business_date:
          type: object
          description: Business date assigned for this shift
          properties:
            id:
              type: string
              description: Identifier for the business date object
              example: 123e4567-e89b-12d3-a456-426614174000
            date:
              type: string
              description: Date assigned for this business date object
              format: date
              example: 2021-01-01
          required:
            - id
            - date
        s_readings:
          type: object
          description: Shift Readings for the shift
          $ref: '#/components/schemas/PosReadingDocument'
          example: {or_beginning_series: 000000, or_ending_series: 000001, or_beginning_sales: 1000.00, or_ending_sales: 2000.00, or_series_reset: 0, or_transaction_count: 100, or_gross_sales: 10000.00, or_net_sales: 9000.00, or_total_vatable_sales: 8000.00, or_total_vat_exempt_sales: 1000.00, or_total_zero_rated_sales: 0.00, or_total_vat_amount: 1000.00, or_total_discount: 1000.00, or_total_item_refund: 1000.00, or_total_receipt_refund: 1000.00, or_total_refund: 1000.00, or_credit_memo_beginning_series: 000000, or_credit_memo_ending_series: 000001, or_credit_memo_series_reset: 0, ar_beginning_series: 000000, ar_ending_series: 000001, ar_beginning_sales: 1000.00, ar_ending_sales: 2000.00, ar_series_reset: 0, ar_transaction_count: 100, ar_gross_sales: 10000.00, ar_net_sales: 9000.00, ar_total_vatable_sales: 8000.00, ar_total_vat_exempt_sales: 1000.00, ar_total_zero_rated_sales: 0.00, ar_total_vat_amount: 1000.00, ar_total_discount: 1000.00, ar_total_item_refund: 1000.00, ar_total_receipt_refund: 1000.00, ar_total_refund: 1000.00}
        date_created:
          type: string
          description: Date created of the business date document
          format: date-time
          example: 2021-01-01T00:00:00Z
        last_updated:
          type: string
          description: Last updated date of the business date document
          format: date-time
          example: 2021-01-01T00:00:00Z
        cashier_id:
          type: object
          description: Cashier details assigned for this shift
          properties:
            id:
              type: string
              description: Identifer for the cashier
              example: 711001
            name:
              type: string
              description: Name of the cashier
              example: Juan Luna
          required:
            - id
            - name
      required:
        - shift_number
        - business_date
        - start_date
        - s_readings
        - date_created
        - last_updated
        - cashier_id

    PosReadingDocument:
      description: POS reading document
      type: object
      properties:
        or_beginning_series:
          type: string
          description: Official beginning series
          example: 000000
        or_ending_series:
          type: string
          description: Official Receipt ending series
          example: 000001
        or_beginning_sales:
          type: number
          description: Official Receipt beginning sales
          example: 1000.00
        or_ending_sales:
          type: number
          description: Official Receipt ending sales
          example: 2000.00
        or_series_reset:
          type: number
          description: Official Receipt series reset
          example: 0
        or_transaction_count:
          type: number
          description: Official Receipt transaction count
          example: 100
        or_gross_sales:
          type: number
          description: Official Receipt gross sales
          example: 10000.00
        or_net_sales:
          type: number
          description: Official Receipt net sales
          example: 9000.00
        or_total_vatable_sales:
          type: number
          description: Official Receipt total vatable sales
          example: 8000.00
        or_total_vat_exempt_sales:
          type: number
          description: Official Receipt total vat exempt sales
          example: 1000.00
        or_total_zero_rated_sales:
          type: number
          description: Official Receipt total zero rated sales
          example: 0.00
        or_total_vat_amount:
          type: number
          description: Official Receipt total vat amount
          example: 1000.00
        or_total_discount:
          type: number
          description: Official Receipt total discount
          example: 1000.00
        or_total_item_refund:
          type: number
          description: Official Receipt total item discount
          example: 1000.00
        or_total_receipt_refund:
          type: number
          description: Official Receipt total receipt discount
          example: 1000.00
        or_total_refund:
          type: number
          description: Official Receipt total discount
          example: 1000.00
        or_credit_memo_beginning_series:
          type: string
          description: Official Receipt credit memo beginning series
          example: 000000
        or_credit_memo_ending_series:
          type: string
          description: Official Receipt credit memo ending series
          example: 000001
        or_credit_memo_series_reset:
          type: number
          description: Official Receipt credit memo series reset
          example: 0
        ar_beginning_series:
          type: string
          description: Acknowlegement Receipt beginning series
          example: 000000
        ar_ending_series:
          type: string
          description: Acknowlegement Receipt ending series
          example: 000001
        ar_beginning_sales:
          type: number
          description: Acknowlegement Receipt beginning sales
          example: 1000.00
        ar_ending_sales:
          type: number
          description: Acknowlegement Receipt ending sales
          example: 2000.00
        ar_series_reset:
          type: number
          description: Acknowlegement Receipt series reset
          example: 0
        ar_transaction_count:
          type: number
          description: Acknowlegement Receipt transaction count
          example: 100
        ar_gross_sales:
          type: number
          description: Acknowlegement Receipt gross sales
          example: 10000.00
        ar_net_sales:
          type: number
          description: Acknowlegement Receipt net sales
          example: 9000.00
        ar_total_vatable_sales:
          type: number
          description: Acknowlegement Receipt total vatable sales
          example: 8000.00
        ar_total_vat_exempt_sales:
          type: number
          description: Acknowlegement Receipt total vat exempt sales
          example: 1000.00
        ar_total_zero_rated_sales:
          type: number
          description: Acknowlegement Receipt total zero rated sales
          example: 0.00
        ar_total_vat_amount:
          type: number
          description: Acknowlegement Receipt total vat amount
          example: 1000.00
        ar_total_discount:
          type: number
          description: Acknowlegement Receipt total discount
          example: 1000.00
        ar_total_item_refund:
          type: number
          description: Acknowlegement Receipt total item discount
          example: 1000.00
        ar_total_receipt_refund:
          type: number
          description: Acknowlegement Receipt total receipt discount
          example: 1000.00
        ar_total_refund:
          type: number
          description: Acknowlegement Receipt total discount
          example: 1000.00
        ar_credit_memo_beginning_series:
          type: string
          description: Acknowlegement Receipt credit memo beginning series
          example: 000000
        ar_credit_memo_ending_series:
          type: string
          description: Acknowlegement Receipt credit memo ending series
          example: 000001
        ar_credit_memo_series_reset:
          type: number
          description: Acknowlegement Receipt credit memo series reset
          example: 0
        void_beginning_series:
          type: string
          description: Void beginning series
          example: 000000
        void_ending_series:
          type: string
          description: Void ending series
          example: 000001
        void_series_reset:
          type: number
          description: Void credit memo series reset
          example: 0
        totals:
          type: array
          description: agregated totals for the business date
          items:
            type: object
            properties:
              type:
                type: string
                description: Type of total
                example: merchandise_sales
              amount:
                type: number
                description: Total amount for the type
                example: 1000.00
              count:
                type: number
                description: Number of transactions for the type
                example: 100
        lists:
          type: array
          description: enumerated list related to the business date (e.g. EPayments, Online transactions, etc)
          items: 
            type: object
            properties:
              type:
                type: string
                description: Type of list
                example: epayments
              items:
                type: array
                description: Items in list
                items:
                  type: object
                  properties:
                    data:
                      type: string
                      description: Details of an item
                      example: MayaQR-12332123
                    amount:
                      type: number
                      description: Amount for the item
                      example: 1000.00
      required:
      - or_beginning_series
      - or_ending_series
      - or_beginning_sales
      - or_ending_sales
      - or_series_reset
      - or_transaction_count
      - or_gross_sales
      - or_net_sales
      - or_total_vatable_sales
      - or_total_vat_exempt_sales
      - or_total_zero_rated_sales
      - or_total_vat_amount
      - or_total_discount
      - or_total_item_refund
      - or_total_receipt_refund
      - or_total_refund
      - or_credit_memo_beginning_series
      - or_credit_memo_ending_series
      - or_credit_memo_series_reset
      - ar_beginning_series
      - ar_ending_series
      - ar_beginning_sales
      - ar_ending_sales
      - ar_series_reset
      - ar_transaction_count
      - ar_gross_sales
      - ar_net_sales
      - ar_total_vatable_sales
      - ar_total_vat_exempt_sales
      - ar_total_zero_rated_sales
      - ar_total_vat_amount
      - ar_total_discount
      - ar_total_item_refund
      - ar_total_receipt_refund
      - ar_total_refund
      - ar_credit_memo_beginning_series
      - ar_credit_memo_ending_series
      - ar_credit_memo_series_reset
      - void_beginning_series
      - void_ending_series
      - void_series_reset

    PosDocument:
      description: Details of the POS
      type: object
      properties:
        id:
          type: string
          description: Identifier of the POS
          example: 123e4567-e89b-12d3-a456-426614174000
        name:
          type: string
          description: Name of the POS
          example: POS 1
        machine_identification_number:
          type: string
          description: Machine identification number of the POS
          example: 123456
        serial_number:
          type: string
          description: Serial number of the POS
          example: 123456
        bir_permit_number:
          type: string
          description: BIR permit number of the POS
          example: 123456
        bir_permit_issued_date:
          type: string
          description: Issued date of the BIR permit
          format: date
          example: 2021-01-01
        bir_permit_expiry_date:
          type: string
          description: Expiry date of the BIR permit
          format: date
          example: 2021-01-01
        spm_permit_number:
          type: string
          description: Special purpose machine permit number assigned for the POS
          example: 123456
        spm_issued_date:
          type: string
          description: Issued date for the special purpose machine permit
          format: date
          example: 2021-01-01
        spm_expiry_date:
          type: string
          description: Expiry date for the special purpose machine permit
          format: date
          example: 2021-01-01
        software_provider:
          type: object
          description: Software provider details of the application used in the POS machine
          properties:
            name:
              type: string
              description: Name of the store
              example: Store 1
            address:
              type: string
              description: Address of the store
              example: 123 Main St.
            tax_identification_number:
              type: string
              description: Tax identification number of the store
              example: 123-456-789-000
            bir_accreditation_number:
              type: string
              description: BIR Accreditation number of the software
              example: 123456
            accreditation_issued_date:
              type: string
              description: Issued date of the accreditation
              format: date
              example: 2021-01-01
            accreditation_expiry_date:
              type: string
              description: Expired date of the accreditation
              format: date
              example: 2021-01-01
            version:
              type: string
              description: Version of the software
              example: 1.0.0
          required:
            - name
            - address
            - tax_identification_number
            - bir_accreditation_number
            - accreditation_issued_date
            - accreditation_expiry_date
            - version
        store:
          type: object
          description: Store details assigned for this POS
          properties:
            id:
              type: string
              description: Identifier for the store
              example: 0000
            name:
              type: string
              description: Name of the store
              example: Store 1
            address:
              type: string
              description: Address of the store
              example: 123 Main St.
            owned_by:
              type: string
              description: Owner of the store
              example: Juan Luna
            operated_by:
              type: string
              description: Operator of the store
              example: Juan Luna
            tax_identification_number:
              type: string
              description: Tax identification number of the store
              example: 123-456-789-000
            phone_number:
              type: string
              description: Phone number of the store
              example: 1234567890
          required:
            - id
            - name
            - address
            - owned_by
            - operated_by
            - tax_identification_number
            - phone_number
        business_date:
          type: object
          description: Business date assigned for this POS
          properties:
            id:
              type: string
              description: Identifier for the business date object
              example: 123e4567-e89b-12d3-a456-426614174000
            date:
              type: string
              description: Date assigned for this business date object
              format: date
              example: 2021-01-01
          required:
            - id
            - date
        shift:
          type: object
          description: Shift assigned for this POS
          properties:
            id:
              type: string
              description: Identifier for the shift object
              example: 123e4567-e89b-12d3-a456-426614174000
            shift_number:
              type: string
              description: Description for the shift
              example: 1
          required:
            - id
            - shift_number
        z_readings:
          type: object
          description: Z Readings for the POS
          $ref: '#/components/schemas/PosReadingDocument'
        configuration:
          type: array
          description: Configuration settings for the POS Application
          items:
            type: object
            properties:
              key:
                type: string
                description: Key for the configuration setting
                example: key1
              value:
                type: string
                description: Value for the configuration setting
                example: value1
            required:
              - key
              - value
        date_created:
          type: string
          description: Date created of the POS document
          format: date-time
          example: 2021-01-01T00:00:00Z
        last_updated:
          type: string
          description: Last updated date of the POS document
          format: date-time
          example: 2021-01-01T00:00:00Z
      required:
        - id
        - name
        - serial_number
        - software_provider
        - store
        - configuration
        - date_created
        - last_updated

    UserDocument:
      description: User document
      type: object
      properties:
        id:
          type: string
          description: Identifier of the user
          example: 123456
        username:
          type: string
          description: Username of the user
          example: user1
        password:
          type: string
          description: Password for the user hashed using SHA256
          example: 5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8
        first_name:
          type: string
          description: First name of the user
          example: Juan
        last_name:
          type: string
          description: Last name of the user
          example: Luna
        permissions:
          type: array
          description: List of permissions assigned to the user
          items:
            type: string
          example: [READ, WRITE]
        status:
          type: string
          description: Status of the user
          example: ACTIVE
        date_created:
          type: string
          description: Date created of the user document
          format: date-time
          example: 2021-01-01T00:00:00Z
        last_updated:
          type: string
          description: Last updated date of the user document
          format: date-time
          example: 2021-01-01T00:00:00Z

    TransactioDocument:
      description: POS Transaction document
      type: object
      properties:
        id:
          type: string
          description: Database Identifier of the transaction
          example: 123e4567-e89b-12d3-a456-426614174000
        type:
          type: string
          description: Type of the transaction. Possible values [SALES, VOID, REFUND]
          example: SALES
        is_official_receipt:
          type: boolean
          description: Is the transaction an official receipt
          example: true
        is_training_mode:
          type: boolean
          description: Is the transaction in training mode
          example: false
        transaction_id:
          type: string
          description: Identifier of the transaction
          example: 3458-100019485-1-L2NCM6N7
        terminal_id:
          type: string
          description: Identifier of the pos machine
          example: 1
        receipt_number:
          type: string
          description: Receipt number of the transaction
          example: 00000001
        receipt_reset:
          type: string
          description: Receipt reset of the transaction
          example: 0
        void_number:
          type: string
          description: Void number of the transaction
          example: 00000001
        void_reset:
          type: string
          description: Void reset of the transaction
          example: 0
        credit_memo:
          type: string
          description: Credit memo of the transaction
          example: 00000001
        credit_memo_reset:
          type: string
          description: Credit memo reset of the transaction
          example: 0
        date_created:
          type: string
          description: Date created of the transaction document
          format: date-time
          example: 2021-01-01T00:00:00Z
        business_date:
          type: string
          description: Business date of the transaction
          format: date
          example: 2021-01-01
        business_date_id:
          type: string
          description: Identifier of the business date
          example: 123e4567-e89b-12d3-a456-426614174000
        shift_number:
          type: string
          description: Shift number of the transaction
          example: 1
        shift_id:
          type: string
          description: Identifier of the shift
          example: 123e4567-e89b-12d3-a456-426614174000
        cashier_id:
          type: string
          description: Identifier of the cashier
          example: 711001
        cashier_name:
          type: string
          description: Name of the cashier
          example: Juan Luna
        manager_id:
          type: string
          description: Identifier of the manager
          example: 711002
        manager_name:
          type: string
          description: Name of the manager
          example: Juan Luna
        customer_type:
          type: string
          description: Type of the customer
          example: SENIOR_CITIZEN
        loyalty_card_number:
          type: string
          description: Loyalty card number of the customer
          example: 1234-5678-9012
        customer_details:
          type: array
          description: Details of the customer
          items:
            type: object
            properties:
              key:
                type: string
                description: Name of field
                example: name
              value:
                type: string
                description: value for the field
                example: Juan Luna
        items:
          type: array
          description: List of items in the transaction
          items:
            type: object
            properties:
              line_number:
                type: number
                description: Line number of the item in the transaction
                example: 1
              type:
                type: string
                description: Type of the item. Possible values [VATABLE, NON_VATABLE, VOID, REFUND]
                example: VATABLE
              quantity:
                type: number
                description: Quantity of the item
                example: 1
              unit_price:
                type: number
                description: Unit price of the item
                example: 1000.00
              gross_amount:
                type: number
                description: Gross amount of the item
                example: 1000.00
              net_amount:
                type: number
                description: Net amount of the item
                example: 900.00
              discount_amount:
                type: number
                description: Discount amount of the item
                example: 100.00
              vat_amount:
                type: number
                description: VAT amount of the item
                example: 100.00
              vatable_amount:
                type: number
                description: Vatable amount of the item
                example: 1000.00
              non_vatable_amount:
                type: number
                description: Non-vatable amount of the item
                example: 0.00
              tax_rate:
                type: number
                description: Tax rate for the item of the transaction
                example: 0.12
              product:
                type: object
                description: Product associated with the item
                properties:
                  id:
                    type: string
                    description: Identifier of the product
                    example: 123456
                  long_name:
                    type: string
                    description: Unabbreviated name of the product
                    example: Product 1
                  short_name:
                    type: string
                    description: Abbreviated name of the product
                    maxLength: 50
                    example: Prod1
                  barcode:
                    type: string
                    description: Barcode of the item
                    example: 1234567890123
                  categories:
                    type: array
                    description: List of category IDs assigned to the product
                    items:
                      type: string
                      example: [REGULAR_ITEM]
              remarks:
                type: string
                description: Remarks for the item
                example: No remarks
        adjustments:
          type: array
          description: List of adjustments in the transaction
          items:
            type: object
            properties:
              type:
                type: string
                description: Type of the adjustment. Possible values [DISCOUNT, GOVERNMENT_DISCOUNT]
                example: GOVERNMENT_DISCOUNT
              promo_id:
                type: string
                description: Identifier of the Promo
                example: 123e4567-e89b-12d3-a456-426614174000
              promo_name:
                type: string
                description: Name of the Promo
                example: SENIOR CITIZEN DISCOUNT
              non_cash_code:
                type: string
                description: NonCash identifier of the Promo
                example: 20190911-0010
              total_discounted_amount:
                type: number
                description: Amount of the adjustment
                example: 100.00
              quantity:
                type: number
                description: Number of times the adjustment was applied
                example: 1
              remarks:
                type: string
                description: Remarks for the adjustment
                example: Senior Citizen Discount
        rewards:
          type: array
          description: List of rewards in the transaction
          items:
            type: object
            properties:
              type:
                type: string
                description: Type of the reward. Possible values [PRODUCT, VOUCHER]
                example: PRODUCT
              promo_id:
                type: string
                description: Identifier of the Promo
                example: 123e4567-e89b-12d3-a456-426614174000
              promo_name:
                type: string
                description: Name of the Promo
                example: SENIOR CITIZEN DISCOUNT
              non_cash_code:
                type: string
                description: NonCash identifier of the Promo
                example: 20190911-0010
              reward_id:
                type: string
                description: Identifier of the product or voucher
                example: 123e4567-e89b-12d3-a456-426614174000
              rewards_tx_code:
                type: string
                description: TX Code of the reward
                example: 123456
              rewards_vx_code:
                type: string
                description: VX Code of the reward
                example: 123456
              quantity:
                type: number
                description: Number of rewards given
                example: 1
              remarks:
                type: string
                description: Remarks for the reward
                example: Free Coke
        payments:
          type: array
          description: List of payments in the transaction
          items:
            type: object
            properties:
              type:
                type: string
                description: Type of the payment. Possible values [CASH, CARD, GIFT_CHECK, EPAYMENT]
                example: CASH
              amount:
                type: number
                description: Amount of the payment
                example: 1000.00
              currency:
                type: string
                description: Currency of the payment
                default: PHP
              details:
                type: object
                description: Other details of the payment
                example: {card_number: 1234567890123456, card_type: VISA}
        amount_currency:
          type: string
          description: Currency of the amount
          default: PHP
        gross_amount:
          type: number
          description: Gross amount of the item
          example: 1000.00
        net_amount:
          type: number
          description: Net amount of the item
          example: 900.00
        discount_amount:
          type: number
          description: Discount amount of the item
          example: 100.00
        vat_amount:
          type: number
          description: VAT amount of the item
          example: 100.00
        vatable_amount:
          type: number
          description: Vatable amount of the item
          example: 1000.00
        non_vatable_amount:
          type: number
          description: Non-vatable amount of the item
          example: 0.00
        amount_paid:
          type: number
          description: Amount paid for the transaction
          example: 1000.00
        amount_change:
          type: number
          description: Change amount of the transaction
          example: 0.00
        total_quantity:
          type: number
          description: Total number of items of the transaction
          example: 10
        reason_id:
          type: string
          description: Identifier of the reason for refund transaction
          example: 123e4567-e89b-12d3-a456-426614174000
        reason:
          type: string
          description: Reason for refund transaction
          example: Defective