openapi: "3.0.0"

info:
  title: POSv3 Client API
  version: "1.0"
  description: Connectivity between POSv3 PWA to local devices such as printers, cash drawers, card terminals and data storage. API also handles connectivity to the central servers to process various cloud functions like authentication, uploading of transactions and data synchronization.  

tags:
  - name: UserController
    description: API for user login and logout
  - name: DeviceController
    description: API for accessing devices like printer and cash drawer
  - name: DatastoreController
    description: API for accessing local data storage
  
servers:
  - url: http://localhost:81107/pos3/v1

security:
  - bearerAuth: []

paths:
  /login:
    post:
      tags: 
        - UserController
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /logout:
    post:
      tags:
        - UserController
      summary: User logout
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /device/status/{device_id}:
    get:
      tags:
        - DeviceController
      summary: Get list of devices connected to POS. Status for all devices will be listed if no device_id is provided.
      parameters:
        - $ref: '#/components/parameters/device_id'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceStatusResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /device/test/{device_id}:
    post:
      tags:
        - DeviceController
      summary: Do a test action for the device to validate connectivity
      parameters:
        - $ref: '#/components/parameters/device_id'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /device/reconnect/{device_id}:
    post:
      tags:
        - DeviceController
      summary: Reconnect to the device
      parameters:
        - $ref: '#/components/parameters/device_id'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /device/configure/{device_id}:
    put:
      tags:
        - DeviceController
      summary: Set configuration for the device
      parameters:
        - $ref: '#/components/parameters/device_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceConfigurationRequest'

      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /device/print/{device_id}:
    post:
      tags:
        - DeviceController
      summary: Send text data to the printer device
      parameters:
        - $ref: '#/components/parameters/device_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DevicePrintRequest'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /device/print_image/{device_id}/{image_filename}:
    post:
      tags:
        - DeviceController
      summary: Print image to the printer device
      parameters:
        - $ref: '#/components/parameters/device_id'
        - $ref: '#/components/parameters/image_filename'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /device/cut_paper/{device_id}:
    post:
      tags:
        - DeviceController
      summary: Send cut command to the printer device
      parameters:
        - $ref: '#/components/parameters/device_id'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /device/open_drawer/{device_id}:
    post:
      tags:
        - DeviceController
      summary: Open cash drawer device
      parameters:
        - $ref: '#/components/parameters/device_id'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /datastore/list/{document}:
    post:
      tags:
        - DatastoreController
      summary: List all data from document with optional criteria
      parameters:
        - name: document
          description: Name of the document to retrieve from
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRequest'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResultListResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /datastore/{document}/{id}:
    get:
      tags:
        - DatastoreController
      summary: Get document with ID
      parameters:
        - name: document
          description: Name of the document to retrieve from
          in: path
          required: true
          schema:
            type: string
        - name: id
          description: Identifier of the document to retrieve
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResultResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'
    post:
      tags:
        - DatastoreController
      summary: Update document with ID
      parameters:
        - name: document
          description: Name of the document to update
          in: path
          required: true
          schema:
            type: string
        - name: id
          description: Identifier of the document to update
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResultResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /datastore/{document}:
    post:
      tags:
        - DatastoreController
      summary: Create a new document
      parameters:
        - name: document
          description: Name of the document to create
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResultResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /terminal/send/{terminal_id}:
    post:
      tags:
        - TerminalController
      summary: Send request to terminal
      parameters:
        - name: terminal_id
          in: path
          description: Identifier of terminal
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
            required: true

      security:
        - bearerAuth: []
      responses:
        '200':
          description: Request sent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminalResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'
  
  /terminal/healthCheck/{terminal_id}:
    get:
      tags:
        - TerminalController
      summary: Perform health check on the terminal
      parameters:
        - name: terminal_id
          in: path
          description: Identifier of the terminal
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Health check successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericHealthCheckResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /terminal/healthCheck:
    get:
      tags:
        - TerminalController
      summary: Perform health check on all terminals
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Health check successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GenericHealthCheckResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'


  /isomessage/send/{gateway_id}:
    post:
      tags:
        - ISOMessageController
      summary: Send ISO message to the payment terminal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ISOMessageRequest'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: ISO message sent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ISOMessageResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /isomessage/healthcheck/{gateway_id}:
    get:
      tags:
        - ISOMessageController
      summary: Perform health check on the ISO message gateway
      parameters:
        - name: gateway_id
          in: path
          description: Identifier of the ISO message gateway
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Health check successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericHealthCheckResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /isomessage/healthcheck:
    get:
      tags:
        - ISOMessageController
      summary: Perform health check on all ISO message gateways
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Health check successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GenericHealthCheckResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    device_id:
      name: device_id
      in: path
      description: Identifier of the device
      required: true
      schema:
        type: string

    image_filename:
      name: image_filename
      in: path
      description: Filename of the image to print
      required: true
      schema:
        type: string

  schemas:
    GenericSuccessResponse:
      description: Generic success response
      type: object
      properties:
        message:
          type: string
          description: Success message
          default: Success
        code:
          type: integer
          description: Success code
          default: 200
      required:
        - message
        - code

    UnauthorizedResponse:
      description: Unauthorized response
      properties:
        message:
          type: string
          description: Unauthorized message
          default: Unauthorized
        code:
          type: integer
          description: Unauthorized code
          enum:
            - 4010  # General unauthorized
            - 4011  # Invalid token
            - 4012  # Token expired
            - 4013  # Insufficient permissions
            - 4014  # User not found
            - 4015  # Wrong password
            - 4016  # Account locked
      required:
        - message
        - code
    
    InternalErrorResponse:
      description: Internal error response
      properties:
        message:
          type: string
          description: Error message
          default: Internal error
        code:
          type: integer
          description: Error code
          default: 50000  # General error
      required:
        - message
        - code

    BadRequestResponse:
      description: Bad request error response
      properties:
        fields:
          type: array
          description: List of fields with errors
          items:
            type: object
            properties:
              field:
                type: string
                description: Field with error
                example: field1
              message:
                type: string
                description: Error message
                example: Field is required
        message:
          type: string
          description: Error message
          default: Bad request
        code:
          type: integer
          description: Error code
          default: 40000  # General error
      required:
        - message
        - code
          
    UserLoginRequest:
      description: User login request
      properties:
        username:
          type: string
          description: Username for the user logging in
          example: user1
        password:
          type: string
          description: Password for the user hashed using SHA256
          example: 5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8
      required:
        - username
        - password

    UserLoginResponse:
      description: User login response
      properties:
        token:
          type: string
          description: JWT token for the user
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1MTYyMzkwMjJ9.3Jv5
        permissions:
          type: array
          description: List of permissions for the user
          items:
            type: string
            example: ["DEVICE_MAINTENANCE", "DEVICE_USER"]
        message:
          type: string
          description: Success message
          default: Login successful
        code:
          type: integer
          description: Success code
          default: 200
      required:
        - token
        - permissions
        - message
        - code

    DeviceStatusResponse:
      description: Device status response
      properties:
        devices:
          type: array
          items:
            type: object
            properties:
              device_id:
                type: string
                description: Identifier of the device
                example: posiflex_printer_1
              name:
                type: string
                description: Name for the device
                example: Posiflex Printer 1
              type:
                type: string
                description: Type of device
                enum:
                  - PRINTER
                  - CASH_DRAWER
                  - LINE_DISPLAY
              status:
                type: string
                description: Status of the device
                enum:
                  - CONNECTED
                  - DISCONNECTED
                  - ERROR
              configurations:
                type: array
                items:
                  type: object
                  properties:
                    key:
                      type: string
                      description: Configuration key
                      example: printer_paper_width
                    value:
                      type: string
                      description: Configuration value
                      example: 80mm
        message:
          type: string
          description: Success message
          default: Device status retrieved
        code:
          type: integer
          description: Success code
          default: 200

    DeviceConfigurationRequest:
      description: Device configuration request
      type: object
      properties:
        configurations:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
                description: Configuration key
                example: printer_paper_width
              value:
                type: string
                description: Configuration value
                example: 80mm
      required:
        - configurations

    DevicePrintRequest:
      description: Device print request
      type: object
      properties:
        template:
          type: string
          description: Template name for the print. Use freemarker syntax as template.
          example: Receipt# ${transaction.receipt_number}\n\nTotal Amount Php${transaction.total_amount}
        template_data:
          type: object
          description: Data to be used in the template
          example: {transaction: {receipt_number: 123456, total_amount: 100.00}}
        text:
          type: string
          description: Text data to print. Use markdown for formatting.
          example: Test Print\n\nThis is a test print
        cut-after:
          type: boolean
          description: Cut the paper after printing
          default: false
        logo-before:
          type: boolean
          description: Print header logo before the text body
          default: false
        logo-after:
          type: boolean
          description: Print header logo after paper had been cut
          default: false
      required:
        - text

    QueryRequest:
      description: Query request
      type: object
      properties:
        query:
          type: object
          $ref: '#/components/schemas/BooleanConditionQuery'
          example: {and: [{eq: {field1: value1}}, {gt: {field2: value2}}]}
        sort:
          type: object
          description: Sort object
          example: {field1: ASC, field2: DESC}
        limit:
          type: integer
          description: Limit of results
          example: 10
        offset:
          type: integer
          description: Offset of results
          example: 0
      required:
        - query

    MatchConditionQuery:
      description: Match condition query
      type: object
      properties:
        eq:
          type: object
          description: Match equal condition
          example: {field: value}
        ne:
          type: object
          description: Match not equal condition
          example: {field: value}
        gt:
          type: object
          description: Match greater than condition
          example: {field: value}
        gte:
          type: object
          description: Match greater than or equal condition
          example: {field: value}
        lt:
          type: object
          description: Match less than condition
          example: {field: value}
        lte:
          type: object
          description: Match less than or equal condition
          example: {field: value}
        in:
          type: object
          description: Match in condition
          example: {field: [value1, value2]}
        nin:
          type: object
          description: Match not in condition
          example: {field: [value1, value2]}
        like:
          type: object
          description: Match like condition
          example: {field: value}
        nlike:
          type: object
          description: Match not like condition
          example: {field: value}
        between:
          type: object
          description: Match between condition
          example: {field: [value1, value2]}

    BooleanConditionQuery:
      description: Boolean condition query
      type: object
      properties:
        and:
          type: array
          description: List of AND conditions
          items:
            type: object
            oneOf:
              - $ref: '#/components/schemas/MatchConditionQuery'
              - $ref: '#/components/schemas/BooleanConditionQuery'
        or:
          type: array
          description: List of OR conditions
          items:
            type: object
            oneOf:
              - $ref: '#/components/schemas/MatchConditionQuery'
              - $ref: '#/components/schemas/BooleanConditionQuery'
        not:
          type: object
          description: NOT condition
          items:
            type: object
            oneOf:
              - $ref: '#/components/schemas/MatchConditionQuery'
              - $ref: '#/components/schemas/BooleanConditionQuery'

    DocumentResultListResponse:
      description: Result list response
      type: object
      properties:
        results:
          type: array
          description: List of results
          items:
            type: object
            description: Result item
        result_size:
          type: integer
          description: Number of results
          default: 0
        message:
          type: string
          description: Success message
          default: Success
        code:
          type: integer
          description: Success code
          default: 200
      required:
        - results
        - result_size
        - message
        - code

    DocumentResultResponse:
      description: Document result response
      type: object
      properties:
        id: 
          type: string
          description: Identifier of the document
          example: 123456
        result:
          type: object
          description: Document data
          default: null
        message:
          type: string
          description: Success message
          default: Success
        code:
          type: integer
          description: Success code
          default: 200
      required:
        - message
        - code

    GenericHealthCheckResponse:
      description: Generic health check response
      type: object
      properties:
        id:
          type: string
          description: Identifier of the service or component
          example: "service123"
        name:
          type: string
          description: Name of the service or component
          example: "Payment Terminal"
        status:
          type: string
          description: Status of the health check
          enum:
            - CONNECTED
            - DISCONNECTED
            - ERROR
          example: CONNECTED
        timestamp:
          type: string
          description: Timestamp of the health check
          format: date-time
          example: "2023-10-01T12:00:00Z"
        message:
          type: string
          description: Additional message for the health check
          example: "Service is running smoothly"
        data:
          type: object
          description: Additional data related to the health check
          example: {version: "1.0.0", uptime: "24 hours"}

    TerminalResponse:
      description: Request for Terminal
      type: object
      properties:
        trace_number:
          type: string
          description: Transaction trace number
          example: "000001"
        batch_number:
          type: string
          description: Batch number of the transaction
          example: "000001"
        transaction_date:
          type: string
          description: Date of the transaction in ISO 8601 format
          example: "2023-10-01T12:00:00Z"
        retrieval_reference_number:
          type: string
          description: Retrieval reference number of the transaction
          example: "123456789012"
        merchant_id:
          type: string
          description: Identifier of the merchant
          example: "1234567890"
        terminal_id:
          type: string
          description: Identifier of the terminal
          example: "terminal123"
        status:
          type: string
          description: Status of the transaction
          enum:
            - SUCCESS
            - FAILED
            - PENDING
          example: "SUCCESS"
        response_data:
          type: object
          description: Additional response data from the terminal
          example: {approval_code: "000123", aid: "aid", appLabel: "appLabel", cardNo: "1234567890123456", tc: "transaction_code", tsi: "tsi_value", tvr: "tvr_value"}
        response_code:
          type: string
          description: Response code of the transaction
          example: "00"
        response_description:
          type: string
          description: Description of the response code
          example: "Transaction Approved"

    ISOMessageRequest:
      description: Request for ISO message
      type: object
      properties:
        message_type:
          type: string
          description: Type of the ISO message
          example: "0200"
        fields:
          type: object
          description: Fields in the ISO message
          additionalProperties:
            type: string
          example: {"2": "1234567890123456", "3": "000000", "4": "100.00"}
        request_code:
          type: string
          description: Request code of the ISO message
          example: "00"

    ISOMessageResponse:
      description: Response for ISO message
      type: object
      properties:
        message_type:
          type: string
          description: Type of the ISO message
          example: "0200"
        fields:
          type: object
          description: Fields in the ISO message
          additionalProperties:
            type: string
          example: {"2": "1234567890123456", "3": "000000", "4": "100.00"}
        response_code:
          type: string
          description: Response code of the ISO message
          example: "00"
        response_description:
          type: string
          description: Description of the response code
          example: "Transaction Approved"
          
    ProductDocument:
      description: Product document
      type: object
      properties:
        id:
          type: string
          description: Identifier of the product
          example: 123456
        long_name:
          type: string
          description: Unabbreviated name of the product
          example: Product 1
        short_name:
          type: string
          description: Abbreviated name of the product
          maxLength: 50
          example: Prod1
        identifiers:
          type: array
          description: Identifiers assigned to the product
          items:
            type: object
            $ref: '#/components/schemas/ProductIdentifierDocument'
          example: [{id: 123456, type: SKU}]
        catalog_category:
          type: object
          description: Category of the product
          $ref: '#/components/schemas/CategoryDocument'
          example: {id: 123e4567-e89b-12d3-a456-426614174000, name: Food, type: CATALOG_CATEGORY}
        catalog_subcategory:
          type: string
          description: Subcategory of the product
          $ref: '#/components/schemas/CategoryDocument'
          example: {id: 123e4567-e89b-12d3-a456-426614174001, name: Snacks, type: CATALOG_SUBCATEGORY}
        catalog_super_category:
          type: string
          description: Super category of the product
          $ref: '#/components/schemas/CategoryDocument'
          example: {id: 123e4567-e89b-12d3-a456-426614174002, name: Grocery, type: CATALOG_SUPER_CATEGORY}
        categories:
          type: array
          description: List of categories assigned to the product
          items:
            type: object
            $ref: '#/components/schemas/CategoryDocument'
          example: [{id: 123e4567-e89b-12d3-a456-426614174000, name: Food, type: CATALOG_CATEGORY}]
        image_url:
          type: string
          description: Filename of the product image
          example: images/product/product1.jpg
        prices:
          type: array
          description: Prices of the product. 
          items:
            type: object
            $ref: '#/components/schemas/ProductPriceDocument'
          example: [{amount: 10.00, currency: PHP, type: RETAIL, from_date: 2021-01-01T00:00:00Z, to_date: 2021-12-31T23:59:59Z, vat_percentage: 12.00}]
        costs:
          type: array
          description: Costs of the product. 
          items:
            type: object
            $ref: '#/components/schemas/ProductPriceDocument'
          example: [{amount: 5.00, currency: PHP, type: COST, from_date: 2021-01-01T00:00:00Z, to_date: 2021-12-31T23:59:59Z}]
        commissions:
          type: array
          description: Commissions of the product. Type can be FIXED_COMMISSION or PERCENTAGE_COMMISSION
          items:
            type: object
            $ref: '#/components/schemas/ProductPriceDocument'
          example: [{amount: 100.00, currency: PHP, type: PERCENTAGE_COMMISSION, from_date: 2021-01-01T00:00:00Z, to_date: 2021-12-31T23:59:59Z}]
        is_consigned:
          type: boolean
          description: Proudct is consigned
          default: false
        is_serializable:
          type: boolean
          description: Product is serialized
          default: false
        is_returnable:
          type: boolean
          description: Product can be returned
          default: true
        is_for_acknowledgement_receipt:
          type: boolean
          description: Sale of product requires acknowledgement receipt
          default: false
        is_non_vatable:
          type: boolean
          description: Product is non-vatable
          default: false
        is_coupon:
          type: boolean
          description: Product is a coupon
          default: false
        is_manual_created:
          type: boolean
          description: Product manually was created in POS
          default: false
        discontinued_date:
          type: string
          description: Date when the product was discontinued
          format: date-time
          example: 2021-01-01T00:00:00Z
        date_created:
          type: string
          description: Date created of the product document
          format: date-time
          example: 2021-01-01T00:00:00Z
        last_updated:
          type: string
          description: Last updated date of the product document
          format: date-time
          example: 2021-01-01T00:00:00Z
        brand:
          type: string
          description: Brand of the product
          example: Brand 1
        attributes:
          type: object
          description: Attributes of the product
          properties:
            key:
              type: string
              description: Attribute key
              example: color
            value:
              type: string
              description: Attribute value
              example: red
        cross_sell_products:
          type: array
          description: List of product IDS to cross sell
          items:
            type: string
            example: product123
        bill_of_materials:
          type: array
          description: List of product IDs for bill of materials
          items:
            type: string
            example: product123
        coupon_print_template:
          type: string
          description: Template for coupon printing
          example: This coupon grants you less Php 10.00 discount on your next purchase.\n<barcode:ITF>\n20012332123543 
      required:
        - id
        - long_name
        - short_name
        - identifiers
        - catalog_category
        - categories
        - prices
        - tax_rate
        - is_consigned
        - date_created
        - last_updated

    ProductIdentifierDocument:
      description: Product identifier document
      type: object
      properties:
        id:
          type: string
          description: Identifier of the product identifier
          example: 123456
        type:
          type: string
          description: Type of the product identifier
          example: SKU
      required:
        - id
        - type

    CategoryDocument:
      description: Category document
      type: object
      properties:
        id:
          type: string
          description: Identifier of the category
          example: 123e4567-e89b-12d3-a456-426614174000
        name:
          type: string
          description: Name of the category
          example: Food
        type:
          type: string
          description: Type of the category
          example: CATALOG_CATEGORY
      required:
        - id
        - name
        - type

    ProductPriceDocument:
      description: Product price document
      type: object
      properties:
        amount:
          type: number
          description: Price of the product
          example: 10.00
        vat_percentage:
          type: number
          description: VAT percentage applicable to the price
          example: 10.00
        currency:
          type: string
          description: Currency of the price
          example: PHP
        type:
          type: string
          description: Type of the price
          example: RETAIL
        from_date:
          type: string
          description: Start date of the price
          format: date-time
          example: 2021-01-01T00:00:00Z
        to_date:
          type: string
          description: End date of the price
          format: date-time
          example: 2021-12-31T23:59:59Z
      required:
        - price
        - currency
        - from_date
        - to_date

    PosMenuDocument:
      description: POS menu document
      type: object
      properties:
        items:
          type: array
          description: List of menu items
          items:
            type: object
            $ref: '#/components/schemas/MenuItemDocument'
            example: [{id: 123456, label: Menu Item 1, product: {id: 123456, long_name: Product 1, short_name: Prod1}, image_url: images/product/product1.jpg, foreground_color: \#000000, background_color: \#FFFFFF}]
        date_created:
          type: string
          description: Date created of the menu document
          format: date-time
          example: 2021-01-01T00:00:00Z
        last_updated:
          type: string
          description: Last updated date of the menu document
          format: date-time
          example: 2021-01-01T00:00:00Z

    MenuItemDocument:
      description: Menu item document
      type: object
      properties:
        id:
          type: string
          description: Identifier of the menu
          example: 123e4567-e89b-12d3-a456-426614174000
        label:
          type: string
          description: Display label of the menu item
          example: Menu 1
        product:
          type: object
          description: Product associated with the menu item
          properties:
            id:
              type: string
              description: Identifier of the product
              example: 123456
            long_name:
              type: string
              description: Unabbreviated name of the product
              example: Product 1
            short_name:
              type: string
              description: Abbreviated name of the product
              maxLength: 50
              example: Prod1
            prices:
              type: array
              description: Prices of the product
              items:
                type: object
                $ref: '#/components/schemas/ProductPriceDocument'
              example: [{price: 10.00, currency: PHP, type: RETAIL, from_date: 2021-01-01T00:00:00Z, to_date: 2021-12-31T23:59:59Z}]
        items:
          type: array
          description: List of sub menu items
          items:
            type: object
            $ref: '#/components/schemas/MenuItemDocument'
            example: [{id: 123456, label: Menu Item 1, product: {id: 123456, long_name: Product 1, short_name: Prod1}, image_url: images/product/product1.jpg, foreground_color: \#000000, background_color: \#FFFFFF}]
        image_url:
          type: string
          description: Filename of the menu item image
          example: images/product/product1.jpg
        foreground_color:
          type: string
          description: Foreground color of the menu item
          example: #000000
        background_color:
          type: string
          description: Background color of the menu item
          example: #FFFFFF
        sequence:
          type: integer
          description: Sequence of the menu item
          example: 1
        from_date:
          type: string
          description: Start date of the barcode
          format: date-time
          example: 2021-01-01T00:00:00Z
        to_date:
          type: string
          description: End date of the barcode
          format: date-time
          example: 2021-12-31T23:59:59Z
        date_created:
          type: string
          description: Date created of the menu document
          format: date-time
          example: 2021-01-01T00:00:00Z
        last_updated:
          type: string
          description: Last updated date of the menu document
          format: date-time
          example: 2021-01-01T00:00:00Z
      required:
        - label
        - from_date
        - date_created
        - last_updated

    DiscountDocument:
      description: Data for discount conditions and calculations
      type: object
      properties:
        id:
          type: string
          description: Identifier of the discount
          example: 123456
        discount_type:
          type: string
          description: Type of discount [GOVERNMENT_DISCOUNT, PROMO_DISCOUNT]
          example: PROMO_DISCOUNT
        non_cash_code:
          type: string
          description: NonCash identifier of the Discount
          example: 20190911-0010
        name:
          type: string
          description: Name of the discount
          example: Senior Citizen Discount
        short_name:
          type: string
          description: Abbreviated name of the discount
          example: SC DISCOUNT
        is_greedy:
          type: boolean
          description: Is the discount greedy
          example: false
        sequence_num:
          type: integer
          description: Sequence of the discount when evaluating (1 as first)
          example: 1
        use_limit_per_customer:
          type: integer
          description: Limit of usage per customer (0 for unlimited)
          example: 0
        use_limit_per_order:
          type: integer
          description: Limit of usage per transaction (0 for unlimited)
          example: 0
        use_limit_per_pos:
          type: integer
          description: Limit of number of times the discount can be used for the POS (0 for unlimited)
          example: 0
        is_vat_exempted:
          type: boolean
          description: Discount is VAT exempted. Creates default action to remove VAT amount from affected products in basket
          example: false
        from_date:
          type: string
          description: Start date of the discount
          format: date-time
          example: 2021-01-01T00:00:00Z
        to_date:
          type: string
          description: End date of the discount
          format: date-time
          example: 2021-12-31T23:59:59Z
        conditions:
          type: array
          description: List of conditions for the discount
          items:
            type: object
            properties:
              id:
                type: string
                description: Identifier of the discount condition
                example: 123456
              description:
                type: string
                description: Description of the discount condition
                example: Product in Senior Citizen Category
              condition_type:
                type: string
                description: Type of discount condition [PRODUCT_QUANTITY, PRODUCT_TOTAL_AMOUNT, ORDER_TOTAL_QUANTITY, ORDER_TOTAL_AMOUNT, CUSTOMER_TYPE, SCHEDULE]
                example: PRODUCT_QUANTITY
              operation:
                type: string
                description: Operation of the discount condition [EQUAL, NOT_EQUAL, GREATER_THAN, GREATER_THAN_OR_EQUAL, LESS_THAN, LESS_THAN_OR_EQUAL]
                example: GREATER_THAN
              value:
                type: string
                description: Value of the discount condition
                example: 1
              sequence_num:
                type: integer
                description: Sequence of when evaluating conditions (1 as first)
                example: 2
              product:
                type: object
                description: Product associated with the discount condition
                properties:
                  id:
                    type: string
                    description: Identifier of the product
                    example: 123456
                  long_name:
                    type: string
                    description: Unabbreviated name of the product
                    example: Product 1
              category:
                type: object
                description: Category associated with the discount condition
                properties:
                  id:
                    type: string
                    description: Identifier of the category
                    example: 123456
                  name:
                    type: string
                    description: Name of the category
                    example: Food
        actions:
          type: array
          description: List of actions for the discount
          items:
            type: object
            properties:
              id:
                type: string
                description: Identifier of the discount action
                example: 123456
              description:
                type: string
                description: Description of the discount action
                example: Apply 10% discount
              action_type:
                type: string
                description: Type of discount action [SET_PRODUCT_PRICE, PRODUCT_FIXED_PRICE_DEDUCTION, PRODUCT_PERCENTAGE_PRICE_DEDUCTION, ORDER_FIXED_PRICE_DEDUCTION, ORDER_PERCENTAGE_PRICE_DEDUCTION, GIFT_WITH_PURCHASE_LIST, GIFT_WITH_PURCHASE_RANDOM]
                example: PRODUCT_PERCENTAGE_PRICE_DEDUCTION
              value:
                type: string
                description: Value of the discount action
                example: 10
              quantity:
                type: integer
                description: Number of times to apply the action
                example: 1
              sequence_num:
                type: integer
                description: Sequence of when applying actions (1 as first)
                example: 1
              product:
                type: object
                description: Product associated with the discount action
                properties:
                  id:
                    type: string
                    description: Identifier of the product
                    example: 123456
                  long_name:
                    type: string
                    description: Unabbreviated name of the product
                    example: Product 1
              category:
                type: object
                description: Category associated with the discount action
                properties:
                  id:
                    type: string
                    description: Identifier of the category
                    example: 123456
                  name:
                    type: string
                    description: Name of the category
                    example: Food

    BarcodeDocument:
      description: Barcode document
      type: object
      properties:
        barcode:
          type: string
          description: Barcode value
          example: 1234567890123
        product:
          type: object
          description: Product associated with the barcode
          properties:
            id:
              type: string
              description: Identifier of the product
              example: 123456
            long_name:
              type: string
              description: Unabbreviated name of the product
              example: Product 1
            short_name:
              type: string
              description: Abbreviated name of the product
              maxLength: 50
              example: Prod1
        from_date:
          type: string
          description: Start date of the barcode
          format: date-time
          example: 2021-01-01T00:00:00Z
        to_date:
          type: string
          description: End date of the barcode
          format: date-time
          example: 2021-12-31T23:59:59Z
        date_created:
          type: string
          description: Date created of the barcode document
          format: date-time
          example: 2021-01-01T00:00:00Z
        last_updated:
          type: string
          description: Last updated date of the barcode document
          format: date-time
          example: 2021-01-01T00:00:00Z
      required:
        - id
        - barcode
        - type
        - date_created
        - last_updated

    NonCashDocument:
      description: NonCash tender lookup details. Examples are gift checks, vouchers and coupons
      type: object
      properties:
        id:
          type: string
          description: Identifier of the non-cash tender
          example: 123456
        type:
          type: string
          description: Type of the non-cash tender [GIFT_CHECK, VOUCHER, COUPON]
          example: GIFT_CHECK
        non_cash_code:
          type: string
          description: Vendor specific identifier of the non-cash tender
          example: 20190911-0010
        description:
          type: string
          description: Description of the non-cash tender
          example: Gift Card - Free Gulp 22oz Save P31.00
        short_name:
          type: string
          description: Name of the non-cash tender printable on the receipt
          example: P31Gulp22OZGC
        from_date:
          type: string
          description: Start date of the validity of the non-cash tender. No value means non-cash tender is valid indefinitely
          format: date-time
          example: 2021-01-01T00:00:00Z
        to_date:
          type: string
          description: End date of the validity of the non-cash tender
          format: date-time
          example: 2021-12-31T23:59:59Z
        amount:
          type: number
          description: Amount of the non-cash tender
          example: 100.00
        date_created:
          type: string
          description: Date created of the non-cash tender document
          format: date-time
          example: 2021-01-01T00:00:00Z
        last_updated:
          type: string
          description: Last updated date of the non-cash tender document
          format: date-time
          example: 2021-01-01T00:00:00Z

    BusinessDateDocument:
      description: Details for business date data
      type: object
      properties:
        id:
          type: string
          description: Identifier of the business date
          example: 123e4567-e89b-12d3-a456-426614174000
        business_date:
          type: string
          description: Business date of the transaction
          format: date
          example: 2021-01-01
        is_training_mode:
          type: boolean
          description: Is the event in training mode
          example: false
        terminal_id:
          type: string
          description: Identifier of the pos machine
          example: 1
        store_id:
          type: string
          description: Identifier of the store
          example: 0000
        cashier_id:
          type: string
          description: Identifier of the cashier
          example: 711001
        cashier_name:
          type: string
          description: Name of the cashier
          example: Juan Luna
        start_date:
          type: string
          description: Start date of the business date
          format: date-time
          example: 2021-01-01T00:00:00Z
        end_date:
          type: string
          description: End date of the business date
          format: date-time
          example: 2021-01-01T23:59:59Z
        day_readings:
          type: object
          description: DayEnd Readings for the business date
          allOf:
            - $ref: '#/components/schemas/PosReadingDocument'
            - type: object
              properties:
                drawer_starting_float:
                  type: number
                  description: Amount of cash in drawer at the start of the shift
                  default: 0.00
                drawer_ending_float:
                  type: number
                  description: Amount of cash in drawer at the end of the shift
                  default: 0.00
                cash_add_amount:
                  type: number
                  description: Total Amount of cash add made during the shift
                  default: 0.00
                cash_add_count:
                  type: number
                  description: Total Number of cash add made during the shift
                  default: 0.00
                cash_drop_amount:
                  type: number
                  description: Total Amount of cash drop made during the shift
                  default: 0.00
                cash_drop_count:
                  type: number
                  description: Total Number of cash add made during the shift
                  default: 0.00
                tenders:
                  type: array
                  description: Tenders data for the reading
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                        description: Type of tender (e.g. CASH, CARD, QRPH, GIFT_CHECK, CLIQQ, COUPON)
                        example: CASH
                      total_amount:
                        type: number
                        description: Amount of tender
                        default: 0.00
                      total_change:
                        type: number
                        description: Change amount of tender
                        default: 0.00
                      total_excess:
                        type: number
                        description: Excess amount of tender
                        default: 0.00
                      transaction_count:
                        type: number
                        description: Number of transaction using the tender
                        default: 0
                totals:
                  type: array
                  description: aggregated totals for the shift
                  items:
                    type: object
                    allOf:
                      - type: object
                        properties:
                          type:
                            type: string
                            description: Type of total
                            example: merchandise_sales
                      - $ref: "#/components/schemas/ReadingBreakdownDocument"
        cumulative_readings:
          type: object
          description: Cumulative Readings as of this business date
          allOf:
            - $ref: '#/components/schemas/PosReadingDocument'
            - type: object
              properties:
                drawer_starting_float:
                  type: number
                  description: Amount of cash in drawer at the start of the shift
                  default: 0.00
                drawer_ending_float:
                  type: number
                  description: Amount of cash in drawer at the end of the shift
                  default: 0.00
                cash_add_amount:
                  type: number
                  description: Total Amount of cash add made during the shift
                  default: 0.00
                cash_add_count:
                  type: number
                  description: Total Number of cash add made during the shift
                  default: 0.00
                cash_drop_amount:
                  type: number
                  description: Total Amount of cash drop made during the shift
                  default: 0.00
                cash_drop_count:
                  type: number
                  description: Total Number of cash add made during the shift
                  default: 0.00
                tenders:
                  type: array
                  description: Tenders data for the reading
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                        description: Type of tender (e.g. CASH, CARD, GIFT_CHECK, EPAYMENT, COUPON)
                        example: CASH
                      total_amount:
                        type: number
                        description: Amount of tender
                        default: 0.00
                      total_change:
                        type: number
                        description: Change amount of tender
                        default: 0.00
                      total_excess:
                        type: number
                        description: Excess amount of tender
                        default: 0.00
                      transaction_count:
                        type: number
                        description: Number of transaction using the tender
                        default: 0
                totals:
                  type: array
                  description: aggregated totals for the shift
                  items:
                    type: object
                    allOf:
                      - type: object
                        properties:
                          type:
                            type: string
                            description: Type of total
                            example: merchandise_sales
                      - $ref: "#/components/schemas/ReadingBreakdownDocument"
        date_created:
          type: string
          description: Date created of the business date document
          format: date-time
          example: 2021-01-01T00:00:00Z
        last_updated:
          type: string
          description: Last updated date of the business date document
          format: date-time
          example: 2021-01-01T00:00:00Z
      required:
        - business_date
        - cashier_id
        - is_training_mode
        - terminal_id
        - start_date
        - day_readings
        - cumulative_readings
        - date_created
        - last_updated

    ShiftDocument:
      description: Details for Shift data
      type: object
      properties:
        id:
          type: string
          description: Identifier of the shift
          example: 123e4567-e89b-12d3-a456-426614174000
        shift_number:
          type: string
          description: Shift number of the transaction
          example: 1
        is_training_mode:
          type: boolean
          description: Is the event in training mode
          example: false
        terminal_id:
          type: string
          description: Identifier of the pos machine
          example: 1
        store_id:
          type: string
          description: Identifier of the store
          example: 0000
        business_date:
          type: string
          description: Business date of the transaction
          format: date
          example: 2021-01-01
        business_date_id:
          type: string
          description: Identifier of the business date
          example: 123e4567-e89b-12d3-a456-426614174000
        cashier_id:
          type: string
          description: Identifier of the cashier
          example: 711001
        cashier_name:
          type: string
          description: Name of the cashier
          example: Juan Luna
        start_date:
          type: string
          description: Start date of the business date
          format: date-time
          example: 2021-01-01T00:00:00Z
        end_date:
          type: string
          description: End date of the business date
          format: date-time
          example: 2021-01-01T23:59:59Z
        shift_readings:
          type: object
          description: ShiftEnd Readings for the shift
          allOf:
            - $ref: '#/components/schemas/PosReadingDocument'
            - type: object
              properties:
                drawer_starting_float:
                  type: number
                  description: Amount of cash in drawer at the start of the shift
                  default: 0.00
                drawer_ending_float:
                  type: number
                  description: Amount of cash in drawer at the end of the shift
                  default: 0.00
                cash_add_amount:
                  type: number
                  description: Total Amount of cash add made during the shift
                  default: 0.00
                cash_add_count:
                  type: number
                  description: Total Number of cash add made during the shift
                  default: 0.00
                cash_drop_amount:
                  type: number
                  description: Total Amount of cash drop made during the shift
                  default: 0.00
                cash_drop_count:
                  type: number
                  description: Total Number of cash add made during the shift
                  default: 0.00
                tenders:
                  type: array
                  description: Tenders data for the reading
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                        description: Type of tender (e.g. CASH, CARD, GIFT_CHECK, EPAYMENT, COUPON)
                        example: CASH
                      total_amount:
                        type: number
                        description: Amount of tender
                        default: 0.00
                      total_change:
                        type: number
                        description: Change amount of tender
                        default: 0.00
                      total_excess:
                        type: number
                        description: Excess amount of tender
                        default: 0.00
                      transaction_count:
                        type: number
                        description: Number of transaction using the tender
                        default: 0
                      lists:
                        type: array
                        description: enumerated list of tenders used
                        $ref: "#/components/schemas/ReadingItemSummaryDocument"
                totals:
                  type: array
                  description: aggregated totals for the shift
                  items:
                    type: object
                    allOf:
                      - type: object
                        properties:
                          type:
                            type: string
                            description: Type of total
                            example: merchandise_sales
                      - $ref: "#/components/schemas/ReadingBreakdownDocument"
                      - type: object
                        properties:
                          products:
                            $ref: '#/components/schemas/ReadingItemSummaryDocument'
                lists:
                  type: array
                  description: enumerated list used within the duration of the reading (e.g. Products, EPayments, Online transactions, etc)
                  items: 
                    type: object
                    properties:
                      type:
                        type: string
                        description: Type of list
                        example: epayments
                      items:
                        type: array
                        description: Items in list
                        items:
                          type: array
                          description: enumerated list of tenders used
                          $ref: "#/components/schemas/ReadingItemSummaryDocument"
                timecard:
                  type: array
                  description: Timecard data for the shift
                  items:
                    type: object
                    description: Timecard data for the shift
                    properties:
                      type:
                        type: string
                        description: Type of timecard (e.g. TIME_IN, TIME_OUT)
                        example: TIME_IN
                      username:
                        type: string
                        description: Username of the cashier
                        example: 711001
                      timestamp:
                        type: string
                        description: Time the time in / out happened
                        format: date-time
                        example: 2021-01-01T00:00:00Z
        cumulative_readings:
          type: object
          description: Cumulative Readings as of this shift
          $ref: '#/components/schemas/PosReadingDocument'
        date_created:
          type: string
          description: Date created of the business date document
          format: date-time
          example: 2021-01-01T00:00:00Z
        last_updated:
          type: string
          description: Last updated date of the business date document
          format: date-time
          example: 2021-01-01T00:00:00Z
      required:
        - shift_number
        - business_date
        - start_date
        - shift_readings
        - cumulative_readings
        - cashier_id
        - is_training_mode
        - terminal_id
        - date_created
        - last_updated

    PosReadingDocument:
      description: POS reading document
      type: object
      properties:
        or:
          type: object
          description: Official Receipt data
          allOf:
            - $ref: "#/components/schemas/HeaderReadingDocument"
            - $ref: "#/components/schemas/ReadingBreakdownDocument"
        ar:
          type: object
          description: Acknowledgement Receipt data
          allOf:
            - $ref: "#/components/schemas/HeaderReadingDocument"
            - $ref: "#/components/schemas/ReadingBreakdownDocument"
        void:
          type: object
          description: Void Transaction data
          properties:
            beginning_series:
              type: string
              description: Beginning series
              default: 000000
            ending_series:
              type: string
              description: Ending series
              default: 000001
            beginning_void_sales:
              type: number
              description: Beginning void sales
              default: 0.00
            ending_void_sales:
              type: number
              description: Ending void sales
              default: 0.00
            series_reset:
              type: number
              description: Series reset
              default: 0
            void_sales_reset:
              type: number
              description: void sales reset
              default: 0
            gross_void_sales:
              type: number
              description: Transaction gross void sales
              default: 0.00
            transaction_count:
              type: number
              description: Number of void transaction
              default: 0
            transaction_item_quantity_count:
              type: number
              description: Number of void items
              default: 0
            products:
              $ref: '#/components/schemas/ReadingItemSummaryDocument'
        credit_memo:
          type: object
          description: Credit Memo (Returns / Refunds) data
          properties:
            beginning_series:
              type: string
              description: Beginning series
              default: 000000
            ending_series:
              type: string
              description: Ending series
              default: 000001
            beginning_credit_memo_sales:
              type: number
              description: Beginning credit memo sales
              default: 0.00
            ending_credit_memo_sales:
              type: number
              description: Ending credit memo sales
              default: 0.00
            series_reset:
              type: number
              description: Series reset
              default: 0
            credit_memo_sales_reset:
              type: number
              description: credit memo sales reset
              default: 0
            gross_credit_memo_sales:
              type: number
              description: Transaction gross credit memo sales
              default: 0.00
            transaction_count:
              type: number
              description: Number of credit memo transaction
              default: 0
            transaction_item_quantity_count:
              type: number
              description: Number of credit memo items
              default: 0
            products:
              $ref: '#/components/schemas/ReadingItemSummaryDocument'
        totals:
          type: array
          description: aggregated totals for the period
          items:
            type: object
            allOf:
              - type: object
                properties:
                  type:
                    type: string
                    description: Type of total
                    example: merchandise_sales
              - $ref: "#/components/schemas/ReadingBreakdownDocument"
              - type: object
                properties:
                  products:
                    $ref: '#/components/schemas/ReadingItemSummaryDocument'
        counters:
          type: array
          description: Current values for counters for the reading
          items:
            type: object
            properties:
              type:
                type: string
                description: Type of counter. Possible values are OR_SERIES, AR_SERIES, VOID_SERIES, CREDIT_MEMO_SERIES, COUPON_SERIES, REPRINT_RECEIPT_COUNT, DRAWER_KICK_COUNT, DRAWER_KEY_OPEN_COUNT, TRAINING_MODE_COUNT, PRINT_SREADINGS_COUNT, PRINT_ZREADINGS_COUNT, PRINT_XREADINGS_COUNT, POS_STARTUP_COUNT, POS_SHUTDOWN_COUNT, LOGIN_COUNT, LOGOUT_COUNT, TIMEIN_COUNT, TIMEOUT_COUNT
                example: OR_SERIES
              value:
                type: number
                description: Value of the counter
                example: 10
      required:
      - or
      - ar
      - void
      - credit_memo

    HeaderReadingDocument:
      description: Top level reading document
      type: object
      properties:
        beginning_series:
          type: string
          description: Beginning series
          default: 000000
        ending_series:
          type: string
          description: Ending series
          default: 000001
        beginning_sales:
          type: number
          description: Beginning sales
          default: 0.00
        ending_sales:
          type: number
          description: Ending sales
          default: 0.00
        series_reset:
          type: number
          description: Series reset
          default: 0
        sales_reset:
          type: number
          description: Sales reset
          default: 0
        gross_sales:
          type: number
          description: Transaction gross sales
          default: 0.00
        transaction_count:
          type: number
          description: Number of transaction
          default: 0
        transaction_item_quantity_count:
          type: number
          description: Number of items
          default: 0
        products:
          $ref: '#/components/schemas/ReadingItemSummaryDocument'

    ReadingItemSummaryDocument:
      description: List of items with total quantity and amount (Ex list of products, tenders, etc)
      type: array
      items:
        type: object
        properties:
          name:
            type: string
            description: Name of the item
            example: Item
          reference_id:
            type: string
            description: Reference identifier for item
            example: 12332123
          quantity:
            type: number
            description: Number of item used
            example: 1
          amount:
            type: number
            description: Total Amount of the item
            example: 1000.00

    ReadingBreakdownDocument:
      description: Accumulated Totals for a group of transaction
      type: object
      properties:
        gross_sales:
          type: number
          description: Transaction gross sales
          default: 0.00
        transaction_count:
          type: number
          description: Transaction count for the type
          default: 0
        transaction_item_quantity_count:
          type: number
          description: Number of items for the type
          default: 0
        net_sales:
          type: number
          description: Net sales
          default: 0.00
        cost_payable:
          type: number
          description: Total cost payable for the type
          default: 0.00
        service_charge:
          type: number
          description: Total service charge for the type
          default: 0.00
        commission:
          type: number
          description: Total commission for the type
          default: 0.00
        vatable_sales:
          type: number
          description: Total VATable sales
          default: 0.00
        vat_amount:
          type: number
          description: Total VAT amount
          default: 0.00
        non_vatable_sales:
          type: number
          description: Total non vatable sales
          default: 0.00
        zero_rated_sales:
          type: number
          description: Total zero rated sales
          default: 0.00
        discount:
          type: number
          description: Total discounted amount for the type
          default: 0.00
        discount_count:
          type: number
          description: Number of discounts for the type
          default: 0
        discount_item_quantity_count:
          type: number
          description: Number of items discounted for the type
          default: 0
        receipt_refund:
          type: number
          description: Total receipt refunded amount for the type
          default: 0.00
        receipt_refund_count:
          type: number
          description: Number of receipt refunded for the type
          default: 0
        receipt_refund_item_quantity_count:
          type: number
          description: Number of items that was receipt refunded for the type
          default: 0
        item_receipt_refund:
          type: number
          description: Total item refunded amount for the type
          default: 0.00
        item_refund_count:
          type: number
          description: Number of item refunded for the type
          default: 0
        item_refund_item_quantity_count:
          type: number
          description: Number of items that was item refunded for the type
          default: 0
        transaction_void:
          type: number
          description: Total transaction void amount for the type
          default: 0.00
        transaction_void_count:
          type: number
          description: Number of transaction void for the type
          default: 0
        transaction_void_item_quantity_count:
          type: number
          description: Number of items that was transaction void for the type
          default: 0
        item_void:
          type: number
          description: Total item void amount for the type
          default: 0.00
        item_void_count:
          type: number
          description: Number of item void for the type
          default: 0
        item_void_item_quantity_count:
          type: number
          description: Number of items that was item void for the type
          default: 0
      required:
        - type
        - gross_sales
        - transaction_count
        - item_quantity_count
        - net_sales
        - cost_payable
        - service_charge
        - commission
        - vatable_sales
        - vat_amount
        - non_vatable_sales
        - zero_rated_sales
        - discount
        - discount_count
        - discount_item_quantity_count
        - receipt_refund
        - receipt_refund_count
        - receipt_refund_item_quantity_count
        - item_receipt_refund
        - item_refund_count
        - item_refund_item_quantity_count
        - transaction_void
        - transaction_void_count
        - transaction_void_item_quantity_count
        - item_void
        - item_void_count
        - item_void_item_quantity_count

    PosDocument:
      description: Details of the POS
      type: object
      properties:
        id:
          type: string
          description: Identifier of the POS
          example: 123e4567-e89b-12d3-a456-426614174000
        name:
          type: string
          description: Name of the POS
          example: POS 1
        terminal_id:
          type: string
          description: Terminal identification number of the POS
          example: 1
        machine_identification_number:
          type: string
          description: Machine identification number of the POS
          example: 123456
        serial_number:
          type: string
          description: Serial number of the POS
          example: 123456
        bir_permit_number:
          type: string
          description: BIR permit number of the POS
          example: 123456
        bir_permit_issued_date:
          type: string
          description: Issued date of the BIR permit
          format: date
          example: 2021-01-01
        bir_permit_expiry_date:
          type: string
          description: Expiry date of the BIR permit
          format: date
          example: 2021-01-01
        special_purpose_machine:
          type: object
          description: Special purpose machine details integrated to the POS machine
          properties:
            description:
              type: string
              description: Description where this special purpose machine details is for
              example: Card Terminal integration
            spm_permit_number:
              type: string
              description: Special purpose machine permit number
              example: 123456
            spm_issued_date:
              type: string
              description: Issued date for the special purpose machine permit
              format: date
              example: 2021-01-01
            spm_expiry_date:
              type: string
              description: Expiry date for the special purpose machine permit
              format: date
              example: 2021-01-01
        software_provider:
          type: object
          description: Software provider details of the application used in the POS machine
          properties:
            name:
              type: string
              description: Name of the store
              example: Store 1
            address:
              type: string
              description: Address of the store
              example: 123 Main St.
            tax_identification_number:
              type: string
              description: Tax identification number of the store
              example: 123-456-789-000
            bir_accreditation_number:
              type: string
              description: BIR Accreditation number of the software
              example: 123456
            accreditation_issued_date:
              type: string
              description: Issued date of the accreditation
              format: date
              example: 2021-01-01
            accreditation_expiry_date:
              type: string
              description: Expired date of the accreditation
              format: date
              example: 2021-01-01
            version:
              type: string
              description: Version of the software
              example: 1.0.0
          required:
            - name
            - address
            - tax_identification_number
            - bir_accreditation_number
            - accreditation_issued_date
            - accreditation_expiry_date
            - version
        store:
          type: object
          description: Store details assigned for this POS
          properties:
            id:
              type: string
              description: Identifier for the store
              example: 0000
            name:
              type: string
              description: Name of the store
              example: Store 1
            address:
              type: string
              description: Address of the store
              example: 123 Main St.
            owned_by:
              type: string
              description: Owner of the store
              example: Juan Luna
            operated_by:
              type: string
              description: Operator of the store
              example: Juan Luna
            tax_identification_number:
              type: string
              description: Tax identification number of the store
              example: 123-456-789-000
            phone_number:
              type: string
              description: Phone number of the store
              example: 1234567890
            is_non_vat_registration:
              type: boolean
              description: Store is registered as non VAT
              default: false
          required:
            - id
            - name
            - owned_by
            - operated_by
            - tax_identification_number
            - is_non_vat_registration
        configuration:
          type: array
          description: Configuration settings for the POS Application
          items:
            type: object
            properties:
              key:
                type: string
                description: Key for the configuration setting
                example: key1
              value:
                type: string
                description: Value for the configuration setting
                example: value1
            required:
              - key
              - value
        pos_messages:
          type: array
          description: Messages displayed on the POS
          items:
            $ref: '#/components/schemas/PosMessageDocument'
        refund_reasons:
          type: array
          description: List of reasons that can be set for refund transactions
          items:
            type: string
            example: Cashier Encoding Error
        customer_types:
          type: array
          description: List of types of customer that can be set for sales transactions
          items:
            type: object
            properties:
              id:
                type: string
                description: Identifier of the customer type
                example: SENIOR_CITIZEN
              name:
                type: string
                description: Text to display on POS when selecting customer type
                example: Senior Citizen
        receipt_templates:
          type: array
          description: List of receipt templates that POS can use when printing receipts
          items:
            type: object
            properties:
              id:
                type: string
                description: Identifier of the receipt template
                example: OR_TRANSACTION
              template:
                type: string
                description: Receipt template to use
                example: EVENT ${event.type}\n${pos.owner}\n${event.description}\n${event.date_created}
        barcode_patterns:
          type: array
          description: List of barcode patterns that POS should recognize when scanning barcodes
          items:
            type: object
            properties:
              pattern:
                type: string
                description: barcode regex pattern 
                example: \^(\d{13})\$
              module_name:
                type: string
                description: name of module to call where the barcode will be processed
                example: add_product
        date_created:
          type: string
          description: Date created of the POS document
          format: date-time
          example: 2021-01-01T00:00:00Z
        last_updated:
          type: string
          description: Last updated date of the POS document
          format: date-time
          example: 2021-01-01T00:00:00Z
      required:
        - id
        - name
        - serial_number
        - software_provider
        - store
        - configuration
        - date_created
        - last_updated

    UserDocument:
      description: User document
      type: object
      properties:
        id:
          type: string
          description: Identifier of the user
          example: 123456
        username:
          type: string
          description: Username of the user
          example: user1
        password:
          type: string
          description: Password for the user hashed using SHA256
          example: 5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8
        first_name:
          type: string
          description: First name of the user
          example: Juan
        last_name:
          type: string
          description: Last name of the user
          example: Luna
        permissions:
          type: array
          description: List of permissions assigned to the user
          items:
            type: string
          example: [READ, WRITE]
        status:
          type: string
          description: Status of the user
          example: ACTIVE
        date_created:
          type: string
          description: Date created of the user document
          format: date-time
          example: 2021-01-01T00:00:00Z
        last_updated:
          type: string
          description: Last updated date of the user document
          format: date-time
          example: 2021-01-01T00:00:00Z

    ReceiptTemplateDocument:
      type: object
      description: Receipt Template document
      properties:
        id:
          type: string
          description: Identifier of the receipt template
          example: LOGIN
        description:
          type: string
          description: description of the receipt template
          example: Login receipt template
        template:
          type: string
          description: Template of the receipt
          example: "|*Log In*|\n${username}\n${login_date}\nLogin successful!\n|---|"

    PosMessageDocument:
      type: object
      description: Messages displayed on the POS. Various text or images that can be displayed on the POS screens or printed on the receipt. Examples Customer screen ads (center, text scroll), Customer screen messages (welcome, unavailable, training), Cashier screen message (welcome, training), Receipt footer ads
      properties:
        id:
          type: string
          description: Identifier of the pos message
          example: 123e4567-e89b-12d3-a456-426614174000
        description:
          type: string
          description: description of the pos message
          example: Login receipt template
        type:
          type: string
          description: Type of message to display. Possible values [NEXT_CUSTOMER, OUT_OF_SERVICE, TRAINING_MODE, RECEIPT_FOOTER, CUSTOMER_DISPLAY_CENTER_AD, CUSTOMER_DISPLAY_TEXT_AD]
          example: 
        value:
          type: string
          description: Value to display. File data should be prefixed by file:// or http://
          example:
        sequence:
          type: number
          description: Sequence of the message if multiple types are found
          example: 1
        schedule:
          type: string
          description: Schedule in cron format when to display message when applicable
          example: "0 0 0 * * *"

    EventDocument:
      type: object
      description: POS Event document
      properties:
        id:
          type: string
          description: Identifier of the event
          example: 123e4567-e89b-12d3-a456-426614174000
        type:
          type: string
          description: Type of the event. Possible values [SALES, VOID, VOID_ITEM, REFUND, REFUND_ITEM, LOGIN, LOGOUT, SHIFT_START, SHIFT_END, DAY_START, DAY_END]
          example:
        date_created:
          type: string
          description: Date created of the event document
          format: date-time
          example: 2021-01-01T00:00:00Z
        is_training_mode:
          type: boolean
          description: Is the event in training mode
          example: false
        receipt_number:
          type: string
          description: Receipt number assigned if event is a transaction
          example: 00000001
        receipt_reset:
          type: string
          description: Receipt reset assigned if event is a transaction
          example: 0
        transaction_id:
          type: string
          description: Identifier of the transaction
          example: 3458-100019485-1-L2NCM6N7
        terminal_id:
          type: string
          description: Identifier of the pos machine
          example: 1
        store_id:
          type: string
          description: Identifier of the store
          example: 0000
        shift_number:
          type: string
          description: Shift number of the transaction
          example: 1
        shift_id:
          type: string
          description: Identifier of the shift
          example: 123e4567-e89b-12d3-a456-426614174000
        business_date:
          type: string
          description: Business date of the transaction
          format: date
          example: 2021-01-01
        business_date_id:
          type: string
          description: Identifier of the business date
          example: 123e4567-e89b-12d3-a456-426614174000
        cashier_id:
          type: string
          description: Identifier of the cashier
          example: 711001
        cashier_name:
          type: string
          description: Name of the cashier
          example: Juan Luna
        receipt_reprint_count:
          type: number
          description: Number of times receipt was reprinted
          example: 0
        receipt_printout:
          type: string
          description: Receipt printout of the event
          example: "************ Log In ************\n711001\nLogin successful!\n--------------------------------"
        data:
          type: object
          description: Data of the event. See schema for TransactionDocument, CashManagementDocument, ShiftDocument, BusinessDateDocument
          example: {login: true}

    TransactionDocument:
      description: POS Transaction document
      type: object
      properties:
        id:
          type: string
          description: Database Identifier of the transaction
          example: 123e4567-e89b-12d3-a456-426614174000
        type:
          type: string
          description: Type of the transaction. Possible values [SALES, VOID, VOID_ITEM, REFUND, REFUND_ITEM]
          example: SALES
        is_official_receipt:
          type: boolean
          description: Is the transaction an official receipt
          example: true
        is_training_mode:
          type: boolean
          description: Is the transaction in training mode
          example: false
        transaction_id:
          type: string
          description: Identifier of the transaction
          example: 3458-100019485-1-L2NCM6N7
        reference_id:
          type: string
          description: Reference identifier of the transaction
          example: 3458-100019485-1-L2NCM6N7
        terminal_id:
          type: string
          description: Identifier of the pos machine
          example: 1
        store_id:
          type: string
          description: Identifier of the store
          example: 0000
        receipt_number:
          type: string
          description: Receipt number of the transaction
          example: 00000001
        receipt_reset:
          type: string
          description: Receipt reset of the transaction
          example: 0
        void_number:
          type: string
          description: Void number of the transaction
          example: 00000001
        void_reset:
          type: string
          description: Void reset of the transaction
          example: 0
        credit_memo:
          type: string
          description: Credit memo of the transaction
          example: 00000001
        credit_memo_reset:
          type: string
          description: Credit memo reset of the transaction
          example: 0
        date_created:
          type: string
          description: Date created of the transaction document
          format: date-time
          example: 2021-01-01T00:00:00Z
        business_date:
          type: string
          description: Business date of the transaction
          format: date
          example: 2021-01-01
        business_date_id:
          type: string
          description: Identifier of the business date
          example: 123e4567-e89b-12d3-a456-426614174000
        shift_number:
          type: string
          description: Shift number of the transaction
          example: 1
        shift_id:
          type: string
          description: Identifier of the shift
          example: 123e4567-e89b-12d3-a456-426614174000
        cashier_id:
          type: string
          description: Identifier of the cashier
          example: 711001
        cashier_name:
          type: string
          description: Name of the cashier
          example: Juan Luna
        manager_id:
          type: string
          description: Identifier of the manager
          example: 711002
        manager_name:
          type: string
          description: Name of the manager
          example: Juan Luna
        customer_type:
          type: string
          description: Type of the customer
          example: SENIOR_CITIZEN
        loyalty_card_number:
          type: string
          description: Loyalty card number of the customer
          example: 1234-5678-9012
        customer_details:
          type: array
          description: Details of the customer
          items:
            type: object
            properties:
              key:
                type: string
                description: Name of field
                example: name
              value:
                type: string
                description: value for the field
                example: Juan Luna
        items:
          type: array
          description: List of items in the transaction
          items:
            type: object
            properties:
              line_number:
                type: number
                description: Line number of the item in the transaction
                default: 1
              type:
                type: string
                description: Type of the item. Possible values [SALES, VOID, REFUND]
                example: VATABLE
              reference_id:
                type: string
                description: Reference identifier of the line item
                example: 3458-100019485-1-L2NCM6N7
              quantity:
                type: number
                description: Quantity of the item
                default: 1
              unit_price:
                type: number
                description: Unit price of the item
                default: 1000.00
              gross_amount:
                type: number
                description: Gross amount of the item
                default: 1000.00
              net_amount:
                type: number
                description: Net amount of the item
                default: 900.00
              discount_amount:
                type: number
                description: Discount amount of the item
                default: 100.00
              vat_amount:
                type: number
                description: VAT amount of the item
                default: 100.00
              vatable_amount:
                type: number
                description: Vatable amount of the item
                default: 1000.00
              non_vatable_amount:
                type: number
                description: Non-vatable amount of the item. Product is marked as non-vatable or is exempted because of government discount
                default: 0.00
              zero_rated_amount:
                type: number
                description: Zero rated amount of the item. Price of the item has 0 vat_percentage or is exempted because customer is DIPLOMAT
                default: 0.00
              commission_amount:
                type: number
                description: Commission amount of the item. Either retrieved from the online service or defined commission rate for the product
                default: 0.00
              cost_payable:
                type: number
                description: Cost payable amount of the item. Either retrieved from the online service or commputed from gross amount minus commission amount 
                default: 0.00
              service_charge:
                type: number
                description: Service charge amount of the item
                default: 0.00
              tax_rate:
                type: number
                description: Tax rate for the item
                default: 0.12
              product:
                type: object
                description: Product associated with the item
                properties:
                  id:
                    type: string
                    description: Identifier of the product
                    example: 123456
                  vat_type:
                    type: string
                    description: Type of VAT for the product. Possible values [VATABLE, NON_VAT, ZERO_RATED]
                    example: VATABLE
                  long_name:
                    type: string
                    description: Unabbreviated name of the product
                    example: Product 1
                  short_name:
                    type: string
                    description: Abbreviated name of the product
                    maxLength: 50
                    example: Prod1
                  barcode:
                    type: string
                    description: Barcode of the item
                    example: 1234567890123
                  categories:
                    type: array
                    description: List of category IDs assigned to the product
                    items:
                      type: string
                      example: [REGULAR_ITEM, SC_20, PWD_20]
              additional_data:
                type: object
                description: Additional data for the item
                example: {remarks: No remarks}
              remarks:
                type: string
                description: Remarks for the item
                example: No remarks
        adjustments:
          type: array
          description: List of adjustments in the transaction
          items:
            type: object
            properties:
              type:
                type: string
                description: Type of the adjustment. Possible values [DISCOUNT, GOVERNMENT_DISCOUNT]
                example: GOVERNMENT_DISCOUNT
              promo_id:
                type: string
                description: Identifier of the Promo
                example: 123e4567-e89b-12d3-a456-426614174000
              promo_name:
                type: string
                description: Name of the Promo
                example: SENIOR CITIZEN DISCOUNT
              non_cash_code:
                type: string
                description: NonCash identifier of the Promo
                example: 20190911-0010
              total_vat_excluded_amount:
                type: number
                description: Amount deducted from VAT
                example: 100.00
              total_discounted_amount:
                type: number
                description: Amount of the adjustment
                example: 100.00
              quantity:
                type: number
                description: Number of times the adjustment was applied
                example: 1
              remarks:
                type: string
                description: Remarks for the adjustment
                example: Senior Citizen Discount
        rewards:
          type: array
          description: List of rewards in the transaction
          items:
            type: object
            properties:
              type:
                type: string
                description: Type of the reward. Possible values [PRODUCT, VOUCHER]
                example: PRODUCT
              promo_id:
                type: string
                description: Identifier of the Promo
                example: 123e4567-e89b-12d3-a456-426614174000
              promo_name:
                type: string
                description: Name of the Promo
                example: SENIOR CITIZEN DISCOUNT
              non_cash_code:
                type: string
                description: NonCash identifier of the Promo
                example: 20190911-0010
              reward_id:
                type: string
                description: Identifier of the product or voucher
                example: 123e4567-e89b-12d3-a456-426614174000
              rewards_tx_code:
                type: string
                description: TX Code of the reward
                example: 123456
              rewards_vx_code:
                type: string
                description: VX Code of the reward
                example: 123456
              quantity:
                type: number
                description: Number of rewards given
                example: 1
              coupon_print_template:
                type: string
                description: Template of the coupon printout
                example: "************ Coupon ************\n${promo_name}\n${promo_id}\n${non_cash_code}\n|---|"
              remarks:
                type: string
                description: Remarks for the reward
                example: Free Coke
        payments:
          type: array
          description: List of payments in the transaction
          items:
            type: object
            properties:
              type:
                type: string
                description: Type of the payment. Possible values [CASH, CARD, GIFT_CHECK, EPAYMENT]
                default: CASH
              amount:
                type: number
                description: Amount of the payment
                default: 0.00
              amount_change:
                type: number
                description: Change amount of the payment
                default: 0.00
              amount_excess:
                type: number
                description: Excess amount of the payment
                default: 0.00
              currency:
                type: string
                description: Currency of the payment
                default: PHP
              details:
                type: object
                description: Other details of the payment
                example: {card_number: 1234567890123456, card_type: VISA}
        amount_currency:
          type: string
          description: Currency for the transaction
          default: PHP
        total_gross_amount:
          type: number
          description: Gross amount of the transaction
          default: 0.00
        total_net_amount:
          type: number
          description: Net amount of the transaction
          default: 0.00
        total_discount_amount:
          type: number
          description: Discount amount of the transaction
          default: 0.00
        total_vat_amount:
          type: number
          description: VAT amount of the transaction
          default: 0.00
        total_vatable_amount:
          type: number
          description: Vatable amount of the transaction
          default: 0.00
        total_non_vatable_amount:
          type: number
          description: Non-vatable amount of the transaction
          default: 0.00
        total_zero_rated_amount:
          type: number
          description: Total Zero rated amount of the transaction
          default: 0.00
        total_commission_amount:
          type: number
          description: Total commission amount of the transaction
          default: 0.00
        total_cost_payable:
          type: number
          description: Total cost payable amount of the transaction
          default: 0.00
        total_service_charge:
          type: number
          description: Total service charge amount of the transaction
          default: 0.00
        total_amount_paid:
          type: number
          description: Total Amount paid for the transaction
          default: 0.00
        total_amount_change:
          type: number
          description: Total Change amount of the transaction
          default: 0.00
        total_amount_excess:
          type: number
          description: Total Excess amount of the transaction
          default: 0.00
        total_quantity:
          type: number
          description: Total number of items of the transaction
          default: 1
        reason_id:
          type: string
          description: Identifier of the reason for refund transaction
          example: 123e4567-e89b-12d3-a456-426614174000
        reason:
          type: string
          description: Reason for refund transaction
          example: Defective

    CashMovementDocument:
      description: Cash Movement document
      type: object
      properties:
        id:
          type: string
          description: Identifier of the cash movement
          example: 123e4567-e89b-12d3-a456-426614174000
        type:
          type: string
          description: Type of the cash mod. Possible values [CASH_ADD, CASH_DROP]
          example: CASH_ADD
        terminal_id:
          type: string
          description: Identifier of the pos machine
          example: 1
        store_id:
          type: string
          description: Identifier of the store
          example: 0000
        shift_id:
          type: string
          description: Identifier of the shift
          example: 123e4567-e89b-12d3-a456-426614174000
        shift_number:
          type: string
          description: Shift number of the transaction
          example: 1
        business_date:
          type: string
          description: Business date of the transaction
          format: date
          example: 2021-01-01
        business_date_id:
          type: string
          description: Identifier of the business date
          example: 123e4567-e89b-12d3-a456-426614174000
        cashier_id:
          type: string
          description: Identifier of the cashier
          example: 711001
        cashier_name:
          type: string
          description: Name of the cashier
          example: Juan Luna
        date_created:
          type: string
          description: Date created of the cash add document
          format: date-time
          example: 2021-01-01T00:00:00Z
        amount:
          type: number
          description: Amount of the cash moved
          example: 1000.00
        envelope_number:
          type: string
          description: Envelope number where the cash is placed
          example: 123456
