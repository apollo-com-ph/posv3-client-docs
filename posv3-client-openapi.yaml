openapi: "3.0.0"

info:
  title: POSv3 Client API
  version: "1.0"
  description: Connectivity between POSv3 PWA to local devices such as printers, cash drawers, card terminals and data storage. API also handles connectivity to the central servers to process various cloud functions like authentication, uploading of transactions and data synchronization.  

tags:
  - name: UserController
    description: API for user login and logout
  - name: DeviceController
    description: API for accessing devices like printer and cash drawer
  - name: DatastoreController
    description: API for accessing local data storage
  
servers:
  - url: http://localhost:81107/pos3/v1

security:
  - bearerAuth: []

paths:
  /login:
    post:
      tags: 
        - UserController
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /logout:
    post:
      tags:
        - UserController
      summary: User logout
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /device/status/{device_id}:
    get:
      tags:
        - DeviceController
      summary: Get list of devices connected to POS. Status for all devices will be listed if no device_id is provided.
      parameters:
        - $ref: '#/components/parameters/device_id'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceStatusResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /device/test/{device_id}:
    post:
      tags:
        - DeviceController
      summary: Do a test action for the device to validate connectivity
      parameters:
        - $ref: '#/components/parameters/device_id'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /device/reconnect/{device_id}:
    post:
      tags:
        - DeviceController
      summary: Reconnect to the device
      parameters:
        - $ref: '#/components/parameters/device_id'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /device/configure/{device_id}:
    put:
      tags:
        - DeviceController
      summary: Set configuration for the device
      parameters:
        - $ref: '#/components/parameters/device_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceConfigurationRequest'

      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /device/print/{device_id}:
    post:
      tags:
        - DeviceController
      summary: Send text data to the printer device
      parameters:
        - $ref: '#/components/parameters/device_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DevicePrintRequest'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /device/print_image/{device_id}/{image_filename}:
    post:
      tags:
        - DeviceController
      summary: Print image to the printer device
      parameters:
        - $ref: '#/components/parameters/device_id'
        - $ref: '#/components/parameters/image_filename'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /device/cut_paper/{device_id}:
    post:
      tags:
        - DeviceController
      summary: Send cut command to the printer device
      parameters:
        - $ref: '#/components/parameters/device_id'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /device/open_drawer/{device_id}:
    post:
      tags:
        - DeviceController
      summary: Open cash drawer device
      parameters:
        - $ref: '#/components/parameters/device_id'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /datastore/list/{document}:
    post:
      tags:
        - DatastoreController
      summary: List all data from document with optional criteria
      parameters:
        - name: document
          description: Name of the document to retrieve from
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                  code:
                    type: integer
                    description: Success code
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /datastore/{document}/{id}:
    get:
      tags:
        - DatastoreController
      summary: Get document with ID
      parameters:
        - name: document
          description: Name of the document to retrieve from
          in: path
          required: true
          schema:
            type: string
        - name: id
          description: Identifier of the document to retrieve
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                  code:
                    type: integer
                    description: Success code
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    device_id:
      name: device_id
      in: path
      description: Identifier of the device
      required: true
      schema:
        type: string

    image_filename:
      name: image_filename
      in: path
      description: Filename of the image to print
      required: true
      schema:
        type: string

  schemas:
    GenericSuccessResponse:
      description: Generic success response
      type: object
      properties:
        message:
          type: string
          description: Success message
          default: Success
        code:
          type: integer
          description: Success code
          default: 200
      required:
        - message
        - code

    UnauthorizedResponse:
      description: Unauthorized response
      properties:
        message:
          type: string
          description: Unauthorized message
          default: Unauthorized
        code:
          type: integer
          description: Unauthorized code
          enum:
            - 4010  # General unauthorized
            - 4011  # Invalid token
            - 4012  # Token expired
            - 4013  # Insufficient permissions
            - 4014  # User not found
            - 4015  # Wrong password
            - 4016  # Account locked
      required:
        - message
        - code
    
    InternalErrorResponse:
      description: Internal error response
      properties:
        message:
          type: string
          description: Error message
          default: Internal error
        code:
          type: integer
          description: Error code
          default: 50000  # General error
      required:
        - message
        - code

    BadRequestResponse:
      description: Bad request error response
      properties:
        fields:
          type: array
          description: List of fields with errors
          items:
            type: object
            properties:
              field:
                type: string
                description: Field with error
                example: field1
              message:
                type: string
                description: Error message
                example: Field is required
        message:
          type: string
          description: Error message
          default: Bad request
        code:
          type: integer
          description: Error code
          default: 40000  # General error
      required:
        - message
        - code
          
    UserLoginRequest:
      description: User login request
      properties:
        username:
          type: string
          description: Username for the user logging in
          example: user1
        password:
          type: string
          description: Password for the user hashed using SHA256
          example: 5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8
      required:
        - username
        - password

    UserLoginResponse:
      description: User login response
      properties:
        token:
          type: string
          description: JWT token for the user
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJpYXQiOjE1MTYyMzkwMjJ9.3Jv5
        permissions:
          type: array
          description: List of permissions for the user
          items:
            type: string
            example: ["DEVICE_MAINTENANCE", "DEVICE_USER"]
        message:
          type: string
          description: Success message
          default: Login successful
        code:
          type: integer
          description: Success code
          default: 200
      required:
        - token
        - permissions
        - message
        - code

    DeviceStatusResponse:
      description: Device status response
      properties:
        devices:
          type: array
          items:
            type: object
            properties:
              device_id:
                type: string
                description: Identifier of the device
                example: posiflex_printer_1
              name:
                type: string
                description: Name for the device
                example: Posiflex Printer 1
              type:
                type: string
                description: Type of device
                enum:
                  - PRINTER
                  - CASH_DRAWER
                  - LINE_DISPLAY
              status:
                type: string
                description: Status of the device
                enum:
                  - CONNECTED
                  - DISCONNECTED
                  - ERROR
              configurations:
                type: array
                items:
                  type: object
                  properties:
                    key:
                      type: string
                      description: Configuration key
                      example: printer_paper_width
                    value:
                      type: string
                      description: Configuration value
                      example: 80mm
        message:
          type: string
          description: Success message
          default: Device status retrieved
        code:
          type: integer
          description: Success code
          default: 200

    DeviceConfigurationRequest:
      description: Device configuration request
      type: object
      properties:
        configurations:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
                description: Configuration key
                example: printer_paper_width
              value:
                type: string
                description: Configuration value
                example: 80mm
      required:
        - configurations

    DevicePrintRequest:
      description: Device print request
      type: object
      properties:
        text:
          type: string
          description: Text data to print. Use markdown for formatting.
          example: Test Print\n\nThis is a test print
        cut-after:
          type: boolean
          description: Cut the paper after printing
          default: false
        logo-before:
          type: boolean
          description: Print header logo before the text body
          default: false
        logo-after:
          type: boolean
          description: Print header logo after paper had been cut
          default: false
      required:
        - text
